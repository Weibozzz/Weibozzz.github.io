(self.webpackChunkweiboqianduan=self.webpackChunkweiboqianduan||[]).push([[8471],{7201:(l,n,e)=>{"use strict";e.r(n),e.d(n,{data:()=>m});const m={key:"v-343ba49f",path:"/%E5%B7%A5%E5%85%B7/nginx%E4%BD%BF%E7%94%A8.html",title:"nginx使用",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"nginx 使用",slug:"nginx-使用",children:[]},{level:2,title:"基本命令",slug:"基本命令",children:[]},{level:2,title:"配置文件",slug:"配置文件",children:[]},{level:2,title:"静态内容",slug:"静态内容",children:[]},{level:2,title:"代理服务器",slug:"代理服务器",children:[]},{level:2,title:"FastCGI代理",slug:"fastcgi代理",children:[]},{level:2,title:"gzip压缩",slug:"gzip压缩",children:[]},{level:2,title:"查看安装",slug:"查看安装",children:[]},{level:2,title:"引用",slug:"引用",children:[]},{level:2,title:"今日图 - 自测代码后要上线了",slug:"今日图-自测代码后要上线了",children:[]}],filePathRelative:"工具/nginx使用.md",git:{updatedTime:1626844854e3}}},2941:(l,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>hl});var m=e(6252);const a=e.p+"assets/img/acf524670274cfa46627b5d1afc8c23f.46cfaf89.gif",s=(0,m.Wm)("h1",{id:"nginx使用",tabindex:"-1"},[(0,m.Wm)("a",{class:"header-anchor",href:"#nginx使用","aria-hidden":"true"},"#"),(0,m.Uk)(" nginx使用")],-1),W=(0,m.Wm)("h2",{id:"nginx-使用",tabindex:"-1"},[(0,m.Wm)("a",{class:"header-anchor",href:"#nginx-使用","aria-hidden":"true"},"#"),(0,m.Uk)(" nginx 使用")],-1),i=(0,m.Wm)("p",null,"Nginx 是一个免费的，开源的，高性能的HTTP服务器和反向代理，以及IMAP / POP3代理服务器。 Nginx 以其高性能，稳定性，丰富的功能，简单的配置和低资源消耗而闻名。很多高知名度的网站都使用 Nginx，如：Netflix，GitHub，SoundCloud，MaxCDN 等。",-1),u=(0,m.Wm)("p",null,[(0,m.Wm)("img",{src:"https://static.lufficc.com/image/3a1b447093d27fc0dc299558189764bb.png",alt:"img"})],-1),r=(0,m.Wm)("p",null,[(0,m.Uk)("Nginx 有一个主线程（ master process）和几个工作线程（worker process）。主线程的目的是"),(0,m.Wm)("strong",null,"加载"),(0,m.Uk)("和"),(0,m.Wm)("strong",null,"验证"),(0,m.Uk)("配置文件、"),(0,m.Wm)("strong",null,"维护"),(0,m.Uk)("工作线程。")],-1),c=(0,m.Wm)("p",null,[(0,m.Uk)("工作线程处理实际的请求，Nginx 采用"),(0,m.Wm)("strong",null,"基于事件"),(0,m.Uk)("的模型和"),(0,m.Wm)("strong",null,"依赖操作系统"),(0,m.Uk)("的机制在工作线程之间高效地分发请求。工作线程的数量可配置，也可自动调整为服务器CPU的数量。")],-1),t=(0,m.Wm)("p",null,[(0,m.Uk)("Nginx 及其模块的工作方式由配置文件确定。 默认情况下，配置文件名为 "),(0,m.Wm)("code",null,"nginx.conf"),(0,m.Uk)("，放在 "),(0,m.Wm)("code",null,"/usr/local/nginx/conf"),(0,m.Uk)(" 、"),(0,m.Wm)("code",null,"/etc/nginx"),(0,m.Uk)(" 或者 "),(0,m.Wm)("code",null,"/usr/local/etc/nginx"),(0,m.Uk)(" 文件夹中。")],-1),o=(0,m.Wm)("h2",{id:"基本命令",tabindex:"-1"},[(0,m.Wm)("a",{class:"header-anchor",href:"#基本命令","aria-hidden":"true"},"#"),(0,m.Uk)(" 基本命令")],-1),d=(0,m.Wm)("p",null,"Nginx 启动之后，可以使用以下命令控制:",-1),p=(0,m.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,m.Wm)("pre",{class:"language-text"},[(0,m.Wm)("code",null,"Copynginx -s <signal>\n")]),(0,m.Wm)("div",{class:"line-numbers"},[(0,m.Wm)("span",{class:"line-number"},"1"),(0,m.Wm)("br")])],-1),g=(0,m.Wm)("p",null,[(0,m.Uk)("其中"),(0,m.Wm)("code",null,"-s"),(0,m.Uk)("意思是向主进程发送信号，"),(0,m.Wm)("code",null,"signal"),(0,m.Uk)("可以为以下四个中的一个:")],-1),b=(0,m.Wm)("ol",null,[(0,m.Wm)("li",null,[(0,m.Wm)("code",null,"stop"),(0,m.Uk)(" — 快速关闭")]),(0,m.Wm)("li",null,[(0,m.Wm)("code",null,"quit"),(0,m.Uk)(" — 优雅关闭")]),(0,m.Wm)("li",null,[(0,m.Wm)("code",null,"reload"),(0,m.Uk)(" — 重新加载配置文件")]),(0,m.Wm)("li",null,[(0,m.Wm)("code",null,"reopen"),(0,m.Uk)(" — 重新打开日志文件")])],-1),U=(0,m.Wm)("p",null,[(0,m.Uk)("当运行"),(0,m.Wm)("code",null,"nginx -s quit"),(0,m.Uk)("时，Nginx 会等待工作进程处理完成当前请求，然后将其关闭。当你修改配置文件后，并不会立即生效，而是等待重启或者收到"),(0,m.Wm)("code",null,"nginx -s reload"),(0,m.Uk)("信号。")],-1),k=(0,m.Wm)("p",null,[(0,m.Uk)("当 Nginx 收到 "),(0,m.Wm)("code",null,"nginx -s reload"),(0,m.Uk)(" 信号后，首先检查配置文件的语法。语法正确后，主线程会开启新的工作线程并向旧的工作线程发送关闭信号，如果语法不正确，则主线程回滚变化并继续使用旧的配置。当工作进程收到主进程的关闭信号后，会在处理完当前请求之后退出。")],-1),x=(0,m.Wm)("h2",{id:"配置文件",tabindex:"-1"},[(0,m.Wm)("a",{class:"header-anchor",href:"#配置文件","aria-hidden":"true"},"#"),(0,m.Uk)(" 配置文件")],-1),h=(0,m.Wm)("p",null,[(0,m.Uk)("Nginx 配置的核心是定义要处理的 "),(0,m.Wm)("code",null,"URL"),(0,m.Uk)(" 以及如何响应这些 "),(0,m.Wm)("code",null,"URL"),(0,m.Uk)(" 请求，即定义一系列的**虚拟服务器（Virtual Servers）**控制对来自特定域名或者 IP 的请求的处理。")],-1),v=(0,m.Wm)("p",null,[(0,m.Uk)("每一个虚拟服务器定义一系列的 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)(" 控制处理特定的 URI 集合。每一个"),(0,m.Wm)("code",null,"location"),(0,m.Uk)("定义了对映射到自己的请求的处理场景，可以返回一个文件或者代理此请求。")],-1),f=(0,m.Wm)("p",null,[(0,m.Uk)("Nginx 由不同的模块组成，这些模块由配置文件中指定的指令控制。 指令分为"),(0,m.Wm)("strong",null,"简单指令"),(0,m.Uk)("和"),(0,m.Wm)("strong",null,"块指令"),(0,m.Uk)("。")],-1),_=(0,m.Wm)("p",null,[(0,m.Uk)("一个简单指令包含"),(0,m.Wm)("strong",null,"指令名称"),(0,m.Uk)("和"),(0,m.Wm)("strong",null,"指令参数"),(0,m.Uk)("，以空格分隔，以分号（"),(0,m.Wm)("code",null,";"),(0,m.Uk)("）结尾。 块指令与简单指令类似，但是由大括号（"),(0,m.Wm)("code",null,"{"),(0,m.Uk)("和"),(0,m.Wm)("code",null,"}"),(0,m.Uk)("）包围。 如果块指令大括号中包含其他指令，则称该指令为上下文（如： "),(0,m.Wm)("code",null,"events"),(0,m.Uk)(", "),(0,m.Wm)("code",null,"http"),(0,m.Uk)(", "),(0,m.Wm)("code",null,"server"),(0,m.Uk)(" 和 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)("）。")],-1),w=(0,m.Wm)("p",null,[(0,m.Uk)("配置文件中的放在上下文之外的指令默认放在"),(0,m.Wm)("strong",null,"主配置文件"),(0,m.Uk)("中（类似继承主配置文件）。 "),(0,m.Wm)("code",null,"events"),(0,m.Uk)(" 和 "),(0,m.Wm)("code",null,"http"),(0,m.Uk)(" 放置在主配置文件中，"),(0,m.Wm)("code",null,"server"),(0,m.Uk)(" 放置在"),(0,m.Wm)("code",null,"http"),(0,m.Uk)("块指令中，"),(0,m.Wm)("code",null,"location"),(0,m.Uk)("放置在"),(0,m.Wm)("code",null,"server"),(0,m.Uk)("块指令中。")],-1),z=(0,m.Wm)("p",null,[(0,m.Uk)("配置文件的注释以 "),(0,m.Wm)("code",null,"#"),(0,m.Uk)(" 开始。")],-1),C=(0,m.Wm)("h2",{id:"静态内容",tabindex:"-1"},[(0,m.Wm)("a",{class:"header-anchor",href:"#静态内容","aria-hidden":"true"},"#"),(0,m.Uk)(" 静态内容")],-1),N=(0,m.Wm)("p",null,[(0,m.Uk)("Web 服务器一个重要的功能是服务静态文件（图像或静态HTML页面）。例如，Nginx 可以很方便的让服务器从"),(0,m.Wm)("code",null,"/data/www"),(0,m.Uk)(" 获取 html 文件，从"),(0,m.Wm)("code",null,"/data/images"),(0,m.Uk)("获取图片来返回给客户端，这只需要在"),(0,m.Wm)("code",null,"http"),(0,m.Uk)("块指令中的"),(0,m.Wm)("code",null,"server"),(0,m.Uk)("块指令中设置两个"),(0,m.Wm)("code",null,"location"),(0,m.Uk)("块指令。")],-1),I=(0,m.Wm)("p",null,[(0,m.Uk)("首先，创建 "),(0,m.Wm)("code",null,"/data/www"),(0,m.Uk)(" 目录，并放入 "),(0,m.Wm)("code",null,"index.html"),(0,m.Uk)("，创建 "),(0,m.Wm)("code",null,"/data/images"),(0,m.Uk)(" 目录并在其中放置一些图片。")],-1),y=(0,m.Wm)("p",null,[(0,m.Uk)("接下来，打开配置文件。 创建一个 "),(0,m.Wm)("code",null,"server"),(0,m.Uk)(" 块：")],-1),R=(0,m.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,m.Wm)("pre",{class:"language-text"},[(0,m.Wm)("code",null,"Copyhttp {\n    server {\n    }\n}\n")]),(0,m.Wm)("div",{class:"line-numbers"},[(0,m.Wm)("span",{class:"line-number"},"1"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"2"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"3"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"4"),(0,m.Wm)("br")])],-1),P=(0,m.Wm)("p",null,[(0,m.Uk)("通常，配置文件可以包括多个 "),(0,m.Wm)("code",null,"server"),(0,m.Uk)(" 块，它们以"),(0,m.Wm)("strong",null,"端口"),(0,m.Uk)("和"),(0,m.Wm)("strong",null,"服务器名称"),(0,m.Uk)("来区分。当 Nginx 决定某一个 "),(0,m.Wm)("code",null,"server"),(0,m.Uk)(" 处理请求后，它将请求头中的 "),(0,m.Wm)("code",null,"URI"),(0,m.Uk)(" 和 "),(0,m.Wm)("code",null,"server"),(0,m.Uk)(" 块中的 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)(" 块进行对比。 加入 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)(" 块指令到 "),(0,m.Wm)("code",null,"server"),(0,m.Uk)(" 中：")],-1),F=(0,m.Wm)("p",null,"将以下位置块添加到服务器块：",-1),G=(0,m.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,m.Wm)("pre",{class:"language-text"},[(0,m.Wm)("code",null,"Copylocation / {\n    root /data/www;\n}\n")]),(0,m.Wm)("div",{class:"line-numbers"},[(0,m.Wm)("span",{class:"line-number"},"1"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"2"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"3"),(0,m.Wm)("br")])],-1),E=(0,m.Wm)("p",null,[(0,m.Uk)("上面的 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)(" 块指定 "),(0,m.Wm)("code",null,"/"),(0,m.Uk)(" 前缀与请求中的 "),(0,m.Wm)("code",null,"URI"),(0,m.Uk)(" 对比。对于匹配的请求，"),(0,m.Wm)("code",null,"URI"),(0,m.Uk)(" 将被添加到 "),(0,m.Wm)("code",null,"root"),(0,m.Uk)(" 指令中指定的路径，即 "),(0,m.Wm)("code",null,"/data/www"),(0,m.Uk)("，以此形成本地文件系统的路径，如访问"),(0,m.Wm)("code",null,"http://localhost/bog/welcome.html"),(0,m.Uk)("，对应服务器文件路径为"),(0,m.Wm)("code",null,"/data/www/bog/welcome.html"),(0,m.Uk)("。 如果 "),(0,m.Wm)("code",null,"URI"),(0,m.Uk)(" 匹配多个 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)(" 块，Nginx 采用"),(0,m.Wm)("strong",null,"最长前缀匹配原则"),(0,m.Uk)("（类似计算机网络里面的IP匹配）， 上面的 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)(" 块前缀长度为 1，因此只有当所有其他 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)(" 块匹配时，才使用该块。")],-1),S=(0,m.Wm)("p",null,"接下来，添加第二个位置块：",-1),T=(0,m.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,m.Wm)("pre",{class:"language-text"},[(0,m.Wm)("code",null,"Copylocation /images/ {\n    root /data;\n}\n")]),(0,m.Wm)("div",{class:"line-numbers"},[(0,m.Wm)("span",{class:"line-number"},"1"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"2"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"3"),(0,m.Wm)("br")])],-1),j=(0,m.Wm)("p",null,[(0,m.Uk)("它将匹配以"),(0,m.Wm)("code",null,"/images/"),(0,m.Uk)("（"),(0,m.Wm)("code",null,"/"),(0,m.Uk)(" 也匹配这样的请求，但具有较短的前缀）开始的请求。")],-1),q=(0,m.Wm)("p",null,[(0,m.Wm)("code",null,"server"),(0,m.Uk)(" 块的最终配置如下：")],-1),A=(0,m.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,m.Wm)("pre",{class:"language-text"},[(0,m.Wm)("code",null,"Copyserver {\n    location / {\n        root /data/www;\n    }\n\n    location /images/ {\n        root /data;\n    }\n}\n")]),(0,m.Wm)("div",{class:"line-numbers"},[(0,m.Wm)("span",{class:"line-number"},"1"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"2"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"3"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"4"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"5"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"6"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"7"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"8"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"9"),(0,m.Wm)("br")])],-1),H=(0,m.Wm)("p",null,[(0,m.Uk)("到目前为止，这已经是一个可以正常运行的服务器，它监听端口80，并且可以在本地计算机上访问 "),(0,m.Wm)("code",null,"http://localhost/"),(0,m.Uk)("。 对于 "),(0,m.Wm)("code",null,"/images/"),(0,m.Uk)(" 开头的请求，服务器将从 "),(0,m.Wm)("code",null,"/data/images"),(0,m.Uk)(" 目录发送文件。 如，对于 "),(0,m.Wm)("code",null,"http://localhost/images/example.png"),(0,m.Uk)(" 请求，nginx 将响应 "),(0,m.Wm)("code",null,"/data/images/example.png"),(0,m.Uk)("文件。 如果不存在，nginx 将返回404。"),(0,m.Wm)("code",null,"URI"),(0,m.Uk)(" 不以 "),(0,m.Wm)("code",null,"/images/"),(0,m.Uk)(" 开头的请求将映射到 "),(0,m.Wm)("code",null,"/data/www"),(0,m.Uk)(" 目录。 例如，对于 "),(0,m.Wm)("code",null,"http://localhost/some/example.html"),(0,m.Uk)(" 请求，nginx 将响应 "),(0,m.Wm)("code",null,"/data/www/some/example.html"),(0,m.Uk)(" 文件。")],-1),M=(0,m.Wm)("h2",{id:"代理服务器",tabindex:"-1"},[(0,m.Wm)("a",{class:"header-anchor",href:"#代理服务器","aria-hidden":"true"},"#"),(0,m.Uk)(" 代理服务器")],-1),$=(0,m.Wm)("p",null,"Nginx 的一个常见应用是将其设置为代理服务器（Proxy Server），即接受客户端的请求并将其转发给代理服务器，再接受代理服务器发来的响应，将它们发送到客户端。",-1),L=(0,m.Wm)("p",null,"比如我们可以用一个 Nginx 实例实现对图片文件的请求使用本地文件系统，而其他请求转发到代理服务器。",-1),B=(0,m.Wm)("p",null,[(0,m.Uk)("首先，向 Nginx 的配置文件中添加一个 "),(0,m.Wm)("code",null,"server"),(0,m.Uk)(" 块来定义代理服务器：")],-1),K=(0,m.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,m.Wm)("pre",{class:"language-text"},[(0,m.Wm)("code",null,"Copyserver {\n    listen 8080;\n    root /data/up1;\n\n    location / {\n    }\n}\n")]),(0,m.Wm)("div",{class:"line-numbers"},[(0,m.Wm)("span",{class:"line-number"},"1"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"2"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"3"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"4"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"5"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"6"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"7"),(0,m.Wm)("br")])],-1),Y=(0,m.Wm)("p",null,[(0,m.Uk)("此服务器侦听端口8080，并将所有请求映射到本地文件系统上的 "),(0,m.Wm)("code",null,"/data/up1"),(0,m.Uk)(" 目录。 创建此目录并将 "),(0,m.Wm)("code",null,"index.html"),(0,m.Uk)(" 放入其中。 注意，"),(0,m.Wm)("code",null,"root"),(0,m.Uk)(" 指令放在 "),(0,m.Wm)("code",null,"server"),(0,m.Uk)(" 上下文中，这样 当 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)(" 块中不含 "),(0,m.Wm)("code",null,"root"),(0,m.Uk)(" 指令时将使用所属 "),(0,m.Wm)("code",null,"server"),(0,m.Uk)(" 的 "),(0,m.Wm)("code",null,"root"),(0,m.Uk)(" 指令。")],-1),D=(0,m.Wm)("p",null,[(0,m.Uk)("接下来，使用上一节中的服务器配置，并将其修改为代理服务器配置。 在第一个位置块中，加上"),(0,m.Wm)("code",null,"proxy_pass"),(0,m.Uk)("指令：")],-1),Q=(0,m.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,m.Wm)("pre",{class:"language-text"},[(0,m.Wm)("code",null,"Copyserver {\n    location / {\n           # proxy_pass指令的参数为：协议+主机名+端口号\n        proxy_pass http://localhost:8080;\n    }\n\n    location /images/ {\n        root /data;\n    }\n}\n")]),(0,m.Wm)("div",{class:"line-numbers"},[(0,m.Wm)("span",{class:"line-number"},"1"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"2"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"3"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"4"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"5"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"6"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"7"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"8"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"9"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"10"),(0,m.Wm)("br")])],-1),O=(0,m.Wm)("p",null,[(0,m.Uk)("修改第二个 匹配 "),(0,m.Wm)("code",null,"/images/"),(0,m.Uk)(" 前缀的 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)(" 块，使其与请求图像文件的扩展名相匹配：")],-1),V=(0,m.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,m.Wm)("pre",{class:"language-text"},[(0,m.Wm)("code",null,"Copylocation ~ \\.(gif|jpg|png)$ {\n    root /data/images;\n}\n")]),(0,m.Wm)("div",{class:"line-numbers"},[(0,m.Wm)("span",{class:"line-number"},"1"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"2"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"3"),(0,m.Wm)("br")])],-1),J=(0,m.Wm)("p",null,[(0,m.Uk)("该参数是一个正则表达式，匹配以.gif，.jpg或.png结尾的所有URI。 正则表达式应该以 "),(0,m.Wm)("code",null,"~"),(0,m.Uk)(" 开头。 相应的请求将映射到 "),(0,m.Wm)("code",null,"/data/images"),(0,m.Uk)(" 目录。")],-1),X=(0,m.Wm)("p",null,[(0,m.Uk)("当 Nginx 选择一个 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)(" 块来处理请求时，它首先检查指定 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)(" 块的前缀，记住具有最长前缀的 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)(" 块，然后检查正则表达式。 如果与正则表达式匹配， Nginx 选择此 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)(" 块，否则，选择先前记住的 "),(0,m.Wm)("code",null,"location"),(0,m.Uk)(" 块。")],-1),Z=(0,m.Wm)("p",null,"代理服务器的最终配置如下：",-1),ll=(0,m.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,m.Wm)("pre",{class:"language-text"},[(0,m.Wm)("code",null,"Copyserver {\n    location / {\n        proxy_pass http://localhost:8080/;\n    }\n\n    location ~ \\.(gif|jpg|png)$ {\n        root /data/images;\n    }\n}\n")]),(0,m.Wm)("div",{class:"line-numbers"},[(0,m.Wm)("span",{class:"line-number"},"1"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"2"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"3"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"4"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"5"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"6"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"7"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"8"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"9"),(0,m.Wm)("br")])],-1),nl=(0,m.Wm)("p",null,[(0,m.Uk)("此服务器将过滤以.gif，.jpg或.png结尾的请求，并将它们映射到 "),(0,m.Wm)("code",null,"/data/images"),(0,m.Uk)(" 目录（通过向 "),(0,m.Wm)("code",null,"root"),(0,m.Uk)(" 指令的参数添加请求的URI），并将所有其他请求发送给上面配置的代理服务器。")],-1),el=(0,m.Wm)("p",null,"这样，图片和其他请求就可以使用不同的服务器来处理。",-1),ml=(0,m.Wm)("h2",{id:"fastcgi代理",tabindex:"-1"},[(0,m.Wm)("a",{class:"header-anchor",href:"#fastcgi代理","aria-hidden":"true"},"#"),(0,m.Uk)(" FastCGI代理")],-1),al=(0,m.Wm)("p",null,"Nginx 可用于将请求路由到 FastCGI 服务器。快速通用网关接口（Fast Common Gateway Interface／FastCGI）是一种让交互程序与Web服务器通信的协议。因此 Nginx 可以将请求路由到 FastCGI 运行的应用程序，如 PHP 程序。",-1),sl=(0,m.Wm)("p",null,[(0,m.Uk)("使用 FastCGI 服务器的最基本的 Nginx 配置包括使用 "),(0,m.Wm)("code",null,"fastcgi_pass"),(0,m.Uk)(" 指令而不是 "),(0,m.Wm)("code",null,"proxy_pass"),(0,m.Uk)(" 指令，以及使用 "),(0,m.Wm)("code",null,"fastcgi_param"),(0,m.Uk)(" 指令来设置传递给 FastCGI 服务器的参数。 假设FastCGI服务器可在 "),(0,m.Wm)("code",null,"localhost:9000"),(0,m.Uk)(" 上访问。 以上一节中的代理服务器配置为基础，使用"),(0,m.Wm)("code",null,"fastcgi_pass"),(0,m.Uk)("指令替换"),(0,m.Wm)("code",null,"proxy_pass"),(0,m.Uk)("指令，并将参数更改为 "),(0,m.Wm)("code",null,"localhost:9000"),(0,m.Uk)(" 。 在 PHP 中， "),(0,m.Wm)("code",null,"SCRIPT_FILENAME"),(0,m.Uk)(" 参数用于确定脚本名称，而 "),(0,m.Wm)("code",null,"QUERY_STRING"),(0,m.Uk)(" 参数用于传递请求参数。 生成的配置将是：")],-1),Wl=(0,m.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,m.Wm)("pre",{class:"language-text"},[(0,m.Wm)("code",null,"Copyserver {\n    location / {\n        fastcgi_pass  localhost:9000;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_param QUERY_STRING    $query_string;\n    }\n\n    location ~ \\.(gif|jpg|png)$ {\n        root /data/images;\n    }\n}\n")]),(0,m.Wm)("div",{class:"line-numbers"},[(0,m.Wm)("span",{class:"line-number"},"1"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"2"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"3"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"4"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"5"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"6"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"7"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"8"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"9"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"10"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"11"),(0,m.Wm)("br")])],-1),il=(0,m.Wm)("p",null,[(0,m.Uk)("这将设置一个服务器，将路由除静态图像以外的所有请求到运行在 "),(0,m.Wm)("code",null,"localhost:9000"),(0,m.Uk)(" 的 FastCGI 服务器。")],-1),ul=(0,m.Wm)("h2",{id:"gzip压缩",tabindex:"-1"},[(0,m.Wm)("a",{class:"header-anchor",href:"#gzip压缩","aria-hidden":"true"},"#"),(0,m.Uk)(" gzip压缩")],-1),rl=(0,m.Wm)("ul",null,[(0,m.Wm)("li",null,"gzip配置的常用参数"),(0,m.Wm)("li",null,"gzip on|off;  #是否开启gzip"),(0,m.Wm)("li",null,"gzip_buffers 32 4K| 16 8K #缓冲(压缩在内存中缓冲几块? 每块多大?)"),(0,m.Wm)("li",null,"gzip_comp_level [1-9] #推荐6 压缩级别(级别越高,压的越小,越浪费CPU计算资源)"),(0,m.Wm)("li",null,"gzip_disable #正则匹配UA 什么样的Uri不进行gzip"),(0,m.Wm)("li",null,"gzip_min_length 200 # 开始压缩的最小长度(再小就不要压缩了,意义不在)"),(0,m.Wm)("li",null,"gzip_http_version 1.0|1.1 # 开始压缩的http协议版本(可以不设置,目前几乎全是1.1协议)"),(0,m.Wm)("li",null,"gzip_proxied          # 设置请求者代理服务器,该如何缓存内容"),(0,m.Wm)("li",null,"gzip_types text/plain application/xml # 对哪些类型的文件用压缩 如txt,xml,html ,css"),(0,m.Wm)("li",null,"gzip_vary on|off  # 是否传输gzip压缩标志")],-1),cl=(0,m.Wm)("p",null,"例如 以下是配置",-1),tl=(0,m.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,m.Wm)("pre",{class:"language-text"},[(0,m.Wm)("code",null,'  gzip on;\n\tgzip_buffers 32 4K;\n\tgzip_comp_level 6;\n  gzip_min_length 100;\n\tgzip_types application/javascript text/css text/xml;\n\tgzip_disable "MSIE [1-6]\\."; #配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）\n  gzip_vary on;\n')]),(0,m.Wm)("div",{class:"line-numbers"},[(0,m.Wm)("span",{class:"line-number"},"1"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"2"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"3"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"4"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"5"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"6"),(0,m.Wm)("br"),(0,m.Wm)("span",{class:"line-number"},"7"),(0,m.Wm)("br")])],-1),ol=(0,m.Wm)("h2",{id:"查看安装",tabindex:"-1"},[(0,m.Wm)("a",{class:"header-anchor",href:"#查看安装","aria-hidden":"true"},"#"),(0,m.Uk)(" 查看安装")],-1),dl=(0,m.Wm)("p",null,[(0,m.Uk)("查看软件安装路径 "),(0,m.Wm)("code",null,"whereis nginx")],-1),pl=(0,m.Wm)("p",null,[(0,m.Uk)("查询运行文件所在路径 "),(0,m.Wm)("code",null,"which nginx")],-1),gl=(0,m.Wm)("p",null,[(0,m.Wm)("code",null,"nginx -t"),(0,m.Uk)(" 检查配置文件")],-1),bl=(0,m.Wm)("h2",{id:"引用",tabindex:"-1"},[(0,m.Wm)("a",{class:"header-anchor",href:"#引用","aria-hidden":"true"},"#"),(0,m.Uk)(" 引用")],-1),Ul=(0,m.Wm)("ul",null,[(0,m.Wm)("li",null,"https://lufficc.com/blog/nginx-for-beginners"),(0,m.Wm)("li",null,"https://www.cnblogs.com/qianpangzi/p/10922420.html")],-1),kl=(0,m.Wm)("h2",{id:"今日图-自测代码后要上线了",tabindex:"-1"},[(0,m.Wm)("a",{class:"header-anchor",href:"#今日图-自测代码后要上线了","aria-hidden":"true"},"#"),(0,m.Uk)(" 今日图 - 自测代码后要上线了")],-1),xl=(0,m.Wm)("p",null,[(0,m.Wm)("img",{src:a,alt:"16ac3747430c8cd7.gif"})],-1),hl={render:function(l,n){return(0,m.wg)(),(0,m.j4)(m.HY,null,[s,W,i,u,r,c,t,o,d,p,g,b,U,k,x,h,v,f,_,w,z,C,N,I,y,R,P,F,G,E,S,T,j,q,A,H,M,$,L,B,K,Y,D,Q,O,V,J,X,Z,ll,nl,el,ml,al,sl,Wl,il,ul,rl,cl,tl,ol,dl,pl,gl,bl,Ul,kl,xl],64)}}}}]);