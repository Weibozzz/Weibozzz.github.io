"use strict";(self.webpackChunkweiboqianduan=self.webpackChunkweiboqianduan||[]).push([[598],{8256:(t,e,n)=>{n.r(e),n.d(e,{data:()=>r});const r={key:"v-1fffd6e7",path:"/Utils/webstorm-%E6%8A%80%E5%B7%A7.html",title:"webstorm-技巧",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"js-live-template",slug:"js-live-template",children:[]},{level:2,title:"激活码",slug:"激活码",children:[]},{level:2,title:"webstorm快捷键和技巧",slug:"webstorm快捷键和技巧",children:[]},{level:2,title:"Table of Contents",slug:"table-of-contents",children:[]},{level:2,title:"Description",slug:"description",children:[]},{level:2,title:"Documentation",slug:"documentation",children:[]},{level:2,title:"Installation",slug:"installation",children:[{level:3,title:"macOS",slug:"macos",children:[]}]},{level:2,title:"webstorm 支持 alias 功能",slug:"webstorm-支持-alias-功能",children:[]},{level:2,title:"window命令行打开webstorm",slug:"window命令行打开webstorm",children:[]},{level:2,title:"今日图 - 为高考的学子点赞",slug:"今日图-为高考的学子点赞",children:[]}],filePathRelative:"Utils/webstorm-技巧.md",git:{updatedTime:1647421767e3}}},1300:(t,e,n)=>{n.r(e),n.d(e,{default:()=>j});var r=n(6252);const s=n.p+"assets/img/image-20200520145052792.9513a640.png",a=n.p+"assets/img/20190606091845.d3bfbf3e.jpg",d=(0,r._)("h1",{id:"webstorm-技巧",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#webstorm-技巧","aria-hidden":"true"},"#"),(0,r.Uk)(" webstorm-技巧")],-1),o=(0,r._)("h2",{id:"js-live-template",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#js-live-template","aria-hidden":"true"},"#"),(0,r.Uk)(" js-live-template")],-1),l=(0,r._)("p",null,"一个webstorm的live-template",-1),p={href:"https://github.com/Weibozzz/js-live-template",target:"_blank",rel:"noopener noreferrer"},i=(0,r.Uk)("https://github.com/Weibozzz/js-live-template"),c=(0,r._)("h2",{id:"激活码",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#激活码","aria-hidden":"true"},"#"),(0,r.Uk)(" 激活码")],-1),$=(0,r._)("p",null,"2020.1的补丁 + 激活码 最新补丁：https://share.weiyun.com/5hbLsZy",-1),u=(0,r._)("p",null,"密码：9gsu6b",-1),m=(0,r._)("h2",{id:"webstorm快捷键和技巧",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#webstorm快捷键和技巧","aria-hidden":"true"},"#"),(0,r.Uk)(" webstorm快捷键和技巧")],-1),h={href:"https://tc9011.com/2017/01/16/webstorm%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/",target:"_blank",rel:"noopener noreferrer"},b=(0,r.Uk)("https://tc9011.com/2017/01/16/webstorm%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/"),f=(0,r._)("ul",null,[(0,r._)("li",null,"长按alt+J，自动选择相同的元素（windows）"),(0,r._)("li",null,"选中元素后，按ctrl+g（mac）")],-1),g=(0,r._)("h2",{id:"table-of-contents",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),(0,r.Uk)(" Table of Contents")],-1),k={href:"https://gitter.im/js-live-template/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge",target:"_blank",rel:"noopener noreferrer"},y=(0,r._)("img",{src:"https://badges.gitter.im/js-live-template/Lobby.svg",alt:"Join the chat at https://gitter.im/js-live-template/Lobby"},null,-1),v=(0,r.uE)('<ol><li><a href="#description">Description</a></li><li><a href="#documentation">Documentation</a></li><li><a href="#installation">Installation</a></li></ol><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2>',2),E=(0,r.Uk)("An extensive set of Javascript "),w={href:"https://www.jetbrains.com/help/idea/2016.1/live-templates.html",target:"_blank",rel:"noopener noreferrer"},D=(0,r.Uk)("live templates"),N=(0,r.Uk)(" for use in JetBrains IDEs. These live templates are based off of https://atom.io/packages/es6-javascript."),x=(0,r.uE)('<p><img src="http://i.imgur.com/vH7X7xf.gif" alt=""></p><h2 id="documentation" tabindex="-1"><a class="header-anchor" href="#documentation" aria-hidden="true">#</a> Documentation</h2><table><thead><tr><th>Live Template Short Hand</th><th>Description</th><th>Template </th></tr></thead><tbody><tr><td> v </td><td> Declarations: var statement </td><td><pre>var $name$;                </pre></td></tr><tr><td> ve </td><td> Declarations: var assignment </td><td><pre>var $name$ = $value$;                </pre></td></tr><tr><td> l </td><td> Declarations: let statement </td><td><pre>let $name$;                </pre></td></tr><tr><td> le </td><td> Declarations: let assignment </td><td><pre>let $name$ = $value$;                </pre></td></tr><tr><td> co </td><td> Declarations: const statement </td><td><pre>const $name$;                </pre></td></tr><tr><td> coe </td><td> Declarations: const assignment </td><td><pre>const $name$ = $value$                </pre></td></tr><tr><td> cos </td><td> Declarations: const symbol </td><td><pre>const $name$ = Symbol(&#39;$name$&#39;);                </pre></td></tr><tr><td> if </td><td> Flow Control: if statement </td><td><pre>if ($condition$) {\n  $END$\n}                </pre></td></tr><tr><td> el </td><td> Flow Control: else statement </td><td><pre>else {\n  $END$\n}                </pre></td></tr><tr><td> ife </td><td> Flow Control: if else statement </td><td><pre>if ($condition1$) {\n  $then1$\n} else {\n  $then2$\n}                </pre></td></tr><tr><td> ei </td><td> Flow Control: else if statement </td><td><pre>else if ($condition$) {\n  $end$\n}                </pre></td></tr><tr><td> fl </td><td> Flow Control: for loop </td><td><pre>for (let $index$ = 0; $index$ &lt; $iterable$.length; $index$++) {\n  $END$\n}                </pre></td></tr><tr><td> fi </td><td> Flow Control: for in loop </td><td><pre>for (let $key$ in $source$) {\n  if ($source$.hasOwnProperty($key$)) {\n    $END$\n  }\n}                </pre></td></tr><tr><td> fo </td><td> Flow Control: for of loop (ES6) </td><td><pre>for (let $key$ of $source$) {\n  $END$\n}                </pre></td></tr><tr><td> wl </td><td> Flow Control: while loop </td><td><pre>while ($condition$) {\n  $END$\n}                </pre></td></tr><tr><td> tc </td><td> Flow Control: try/catch </td><td><pre>try {\n  $try_body$\n} catch ($error$) {\n  $catch_body$\n}                </pre></td></tr><tr><td> tf </td><td> Flow Control: try/finally </td><td><pre>try {\n  $try_body$\n} finally {\n  $finally_body$\n}                </pre></td></tr><tr><td> tcf </td><td> Flow Control: try/catch/finally </td><td><pre>try {\n  $try_body$\n} catch ($error$) {\n  $catch_body$\n} finally {\n  $finally_body$\n}                </pre></td></tr><tr><td> f </td><td> Functions: anonymous function </td><td><pre>function ($arguments$) { $END$ }                </pre></td></tr><tr><td> iife </td><td> Functions: immediately-invoked function expression (IIFE) </td><td><pre>(($arguments$) =&gt; {\n  $function_body$\n})($passed_arguments$);                </pre></td></tr><tr><td> fa </td><td> Functions: function apply </td><td><pre>$fn$.apply($context$, $arguments$);                </pre></td></tr><tr><td> fc </td><td> Functions: function call </td><td><pre>$fn$.call($context$, $arguments$);                </pre></td></tr><tr><td> fb </td><td> Functions: function bind </td><td><pre>$fn$.bind($context$, $arguments$);                </pre></td></tr><tr><td> af </td><td> Functions: arrow function (ES6) </td><td><pre>($arguments$) =&gt; $statement$                </pre></td></tr><tr><td> afb </td><td> Functions: arrow function with body (ES6) </td><td><pre>($arguments$) =&gt; {\n  $END$\n}                </pre></td></tr><tr><td> gf </td><td> Functions: generator function (ES6) </td><td><pre>function* ($arguments$) {\n  $END$\n}                </pre></td></tr><tr><td> gfn </td><td> Functions: named generator function (ES6) </td><td><pre>function* $name$ ($arguments$) {\n  $END$\n}                </pre></td></tr><tr><td> fe </td><td> Iterables: forEach loop (chainable) </td><td><pre>$iterable$.forEach(($item$)) =&gt; {\n  $END$\n});                </pre></td></tr><tr><td> map </td><td> Iterables: map function (chainable) </td><td><pre>$iterable$.map(($item$)) =&gt; {\n  return $END$\n});                </pre></td></tr><tr><td> reduce </td><td> Iterables: reduce function (chainable) </td><td><pre>$iterable$.reduce(($previous$, $current$) =&gt; {\n  return $body$\n}, $initial$);                </pre></td></tr><tr><td> filter </td><td> Iterables: filter function (chainable) </td><td><pre>$iterable$.filter(($item$) =&gt; {\n  // return true to remove item from collection\n  $END$\n});                </pre></td></tr><tr><td> find </td><td> Iterables: ES6 find function (chainable) </td><td><pre>$iterable$.find(($item$) =&gt; {\n  // return true to find single item if it is in the collection\n  $END$\n});                </pre></td></tr><tr><td> c </td><td> Objects and classes: class (ES6) </td><td><pre>class $name$ {\n  constructor($arguments$) {\n    $END$\n  }\n}                </pre></td></tr><tr><td> cex </td><td> Objects and classes: child class (ES6 syntax) </td><td><pre>class $name$ extends $base$ {\n  constructor($arguments$) {\n    super($arguments$);\n    $END$\n  }\n}                </pre></td></tr><tr><td> cf </td><td> Objects and classes: class function (ES6 syntax) </td><td><pre>$fn_name$($arguments$) {\n  $END$\n}                </pre></td></tr><tr><td> kv </td><td> Objects and classes: key/value pair </td><td><pre>$key$: $value$                </pre></td></tr><tr><td> m </td><td> Objects and classes: method (ES6 syntax) </td><td><pre>$method$($arguments$) {\n  $END$\n}                </pre></td></tr><tr><td> set </td><td> Objects and classes: setter (ES6 syntax) </td><td><pre>set $property$($value$) {\n  $END$\n}                </pre></td></tr><tr><td> proto </td><td> Objects and classes: prototype method (chainable) </td><td><pre>$class$.prototype.$method_name$ = function ($arguments$) {\n  $END$\n};                </pre></td></tr><tr><td> r </td><td> Returning values: return </td><td><pre>return $value$;                </pre></td></tr><tr><td> rth </td><td> Returning values: return this </td><td><pre>return this;                </pre></td></tr><tr><td> rn </td><td> Returning values: return null </td><td><pre>return null;                </pre></td></tr><tr><td> rt </td><td> Returning values: return true </td><td><pre>return true;                </pre></td></tr><tr><td> rf </td><td> Returning values: return false </td><td><pre>return false;                </pre></td></tr><tr><td> r0 </td><td> Returning values: return 0 </td><td><pre>return 0;                </pre></td></tr><tr><td> r-1 </td><td> Returning values: return -1 </td><td><pre>return -1;                </pre></td></tr><tr><td> rp </td><td> Returning values: return Promise (ES6) </td><td><pre>return new Promise((resolve, reject) =&gt; {\n  $END$\n});                </pre></td></tr><tr><td> S </td><td> Types: String </td><td><pre>String                </pre></td></tr><tr><td> N </td><td> Types: Number </td><td><pre>Number                </pre></td></tr><tr><td> O </td><td> Types: Object </td><td><pre>Object                </pre></td></tr><tr><td> A </td><td> Types: Array </td><td><pre>Array                </pre></td></tr><tr><td> D </td><td> Types: Date </td><td><pre>Date                </pre></td></tr><tr><td> Rx </td><td> Types: RegExp </td><td><pre>RegExp                </pre></td></tr><tr><td> tof </td><td> Types: typeof comparison </td><td><pre>typeof $source$ === &#39;$type$&#39;;                </pre></td></tr><tr><td> iof </td><td> Types: instanceof comparison </td><td><pre>$source$ instanceof $object$                </pre></td></tr><tr><td> p </td><td> Promises: new Promise (ES6) </td><td><pre>new Promise((resolve, reject) =&gt; {\n  $END$\n});                </pre></td></tr><tr><td> then </td><td> Promises: Promise.then (chainable) </td><td><pre>$promise$.then(($value$) =&gt; {\n  $END$\n});                </pre></td></tr><tr><td> catch </td><td> Promises: Promise.catch (chainable) </td><td><pre>$promise$.catch(($err$) =&gt; {\n  $END$\n});                </pre></td></tr><tr><td> ex </td><td> ES6 modules: module export </td><td><pre>export $member$;                </pre></td></tr><tr><td> import </td><td> ES6 modules: module import </td><td><pre>import $END$ from &#39;$module$&#39;;                </pre></td></tr><tr><td> ima </td><td> ES6 modules: module import as </td><td><pre>import $exposed$ as $name$ from &#39;$module$&#39;;                </pre></td></tr><tr><td> imn </td><td> ES6 modules: named module export </td><td><pre>import { $name$ } from &#39;$module$&#39;;                </pre></td></tr><tr><td> desc </td><td> BDD testing (Mocha, Jasmine, etc.): describe </td><td><pre>describe(&#39;$description$&#39;, () =&gt; {\n  $END$\n});                </pre></td></tr><tr><td> ita </td><td> BDD testing (Mocha, Jasmine, etc.): asynchronous &quot;it&quot; </td><td><pre>it(&#39;$description$&#39;, (done) =&gt; {\n  $END$\n});                </pre></td></tr><tr><td> bef </td><td> BDD testing (Mocha, Jasmine, etc.): before </td><td><pre>before(() =&gt; {\n  $END$\n});                </pre></td></tr><tr><td> befe </td><td> BDD testing (Mocha, Jasmine, etc.): before each </td><td><pre>beforeEach(() =&gt; {\n  $END$\n});                </pre></td></tr><tr><td> after </td><td> BDD testing (Mocha, Jasmine, etc.): after </td><td><pre>after(() =&gt; {\n  $END$\n});                </pre></td></tr><tr><td> afte </td><td> BDD testing (Mocha, Jasmine, etc.): after each </td><td><pre>afterEach(() =&gt; {\n  $END$\n});                </pre></td></tr><tr><td> cl </td><td> Console: console.log </td><td><pre>console.log(&#39;$title$&#39;, $value$);                </pre></td></tr><tr><td> cll </td><td> Console: console.log (text only) </td><td><pre>console.log($END$);                </pre></td></tr><tr><td> ce </td><td> Console: console.error </td><td><pre>console.error($END$);                </pre></td></tr><tr><td> cw </td><td> Console: console.error </td><td><pre>console.warn($END$);                </pre></td></tr><tr><td> st </td><td> Timers: setTimeout </td><td><pre>setInterval(() =&gt; {\n  $END$\n}, $delay$);                </pre></td></tr><tr><td> si </td><td> Timers: setInterval </td><td><pre>setTimeout(() =&gt; {\n  $END$\n}, $delay$);                </pre></td></tr><tr><td> sim </td><td> Timers: setInterval </td><td><pre>setImmediate(() =&gt; {\n  $END$\n});                </pre></td></tr><tr><td> ae </td><td> DOM specifics: addEventListener </td><td><pre>$document$.addEventListener(&#39;$event$&#39;, function(e) {\n  $END$\n});                </pre></td></tr><tr><td> gi </td><td> DOM specifics: getElementById </td><td><pre>$document$.getElementById(&#39;$id$&#39;);                </pre></td></tr><tr><td> gc </td><td> DOM specifics: getElementByClassName </td><td><pre>Array.from($document$).getElementsByClassName(&#39;$class$&#39;);                </pre></td></tr><tr><td> gt </td><td> DOM specifics: getElementByClassName </td><td><pre>Array.from($document$).getElementsByTagName(&#39;$class$&#39;);                </pre></td></tr><tr><td> qs </td><td> DOM specifics: querySelector </td><td><pre>$document$.querySelector(&#39;$selector$&#39;);                </pre></td></tr><tr><td> qsa </td><td> DOM specifics: querySelectorAll </td><td><pre>$document$.querySelectorAll(&#39;$selector$&#39;);                </pre></td></tr><tr><td> cb </td><td> Node.js specifics: Node.js style callback </td><td><pre>(error, $value$) =&gt; { $END$ }                </pre></td></tr><tr><td> re </td><td> Node.js specifics: require a module </td><td><pre>require(&#39;$module$&#39;);                </pre></td></tr><tr><td> em </td><td> Node.js specifics: export member </td><td><pre>exports.$name$ = $value$;                </pre></td></tr><tr><td> me </td><td> Node.js specifics: module.exports </td><td><pre>module.exports = $name$;                </pre></td></tr><tr><td> on </td><td> Node.js specifics: attach an event handler (chainable) </td><td><pre>$emitter$.on(&#39;$event$&#39;, $arguments$) =&gt; {\n  $END$\n});                </pre></td></tr><tr><td> us </td><td> Miscellaneous: use strict </td><td><pre>&#39;use strict&#39;;                </pre></td></tr><tr><td> fn </td><td> Functions: named function </td><td><pre>function $name$($arguments$) {\n  $END$\n}                </pre></td></tr></tbody></table><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><h3 id="macos" tabindex="-1"><a class="header-anchor" href="#macos" aria-hidden="true">#</a> macOS</h3><p>There are two ways to install:</p><h4 id="using-settings-jar" tabindex="-1"><a class="header-anchor" href="#using-settings-jar" aria-hidden="true">#</a> Using settings.jar</h4><ol><li>File &gt; Import Settings</li><li>Select the settings.jar file</li><li>Check Live templates in the Select Components to Import dialog</li><li>Click ok in the Select Components to Import dialog</li><li>Click ok when prompted to restart</li></ol><h4 id="copying-es6-xml" tabindex="-1"><a class="header-anchor" href="#copying-es6-xml" aria-hidden="true">#</a> Copying es6.xml</h4><p>Put <code>es6.xml</code> inside of the following directory:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>~/Library/Preferences/<span class="token operator">&lt;</span>intellij-product-install<span class="token operator">&gt;</span>/templates\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="webstorm-支持-alias-功能" tabindex="-1"><a class="header-anchor" href="#webstorm-支持-alias-功能" aria-hidden="true">#</a> webstorm 支持 alias 功能</h2><p>根目录新建 <code>webstorm.onfig.js</code> 然后在设置里面搜索 webpack ，然后指向当前的配置文件</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// webstorm.onfig.js</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">function</span> <span class="token function">resolve</span> <span class="token punctuation">(</span><span class="token parameter">dir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> dir<span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">context</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dicrname<span class="token punctuation">,</span> <span class="token string">&#39;./&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.less&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.json&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">&#39;@&#39;</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;./&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="window命令行打开webstorm" tabindex="-1"><a class="header-anchor" href="#window命令行打开webstorm" aria-hidden="true">#</a> window命令行打开webstorm</h2><ol><li>找到安装 bin 目录，添加环境变量</li><li>通过 cmder 设置 alias</li></ol><p>这里可能是cmder bug所以暂时只能设置为这样</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">alias</span> ws.<span class="token operator">=</span>webstorm64.exe ./\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="'+s+'" alt="image-20200520145052792"></p><h2 id="今日图-为高考的学子点赞" tabindex="-1"><a class="header-anchor" href="#今日图-为高考的学子点赞" aria-hidden="true">#</a> 今日图 - 为高考的学子点赞</h2><p><img src="'+a+'" alt="20190606091845.jpg">~~</p>',21),_={},j=(0,n(3744).Z)(_,[["render",function(t,e){const n=(0,r.up)("OutboundLink");return(0,r.wg)(),(0,r.iD)(r.HY,null,[d,o,l,(0,r._)("p",null,[(0,r._)("a",p,[i,(0,r.Wm)(n)])]),c,$,u,m,(0,r._)("p",null,[(0,r._)("a",h,[b,(0,r.Wm)(n)])]),f,g,(0,r._)("p",null,[(0,r._)("a",k,[y,(0,r.Wm)(n)])]),v,(0,r._)("p",null,[E,(0,r._)("a",w,[D,(0,r.Wm)(n)]),N]),x],64)}]])}}]);