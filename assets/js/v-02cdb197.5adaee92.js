"use strict";(self.webpackChunkweiboqianduan=self.webpackChunkweiboqianduan||[]).push([[7431],{6027:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-02cdb197",path:"/RegExp/%E5%89%8D%E7%AB%AF%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%E5%B8%B8%E7%94%A8%E7%9A%84%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.html",title:"前端表单验证常用的正则表达式",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"用户名正则",slug:"用户名正则",children:[]},{level:2,title:"密码强度正则",slug:"密码强度正则",children:[]},{level:2,title:"整数正则",slug:"整数正则",children:[]},{level:2,title:"数字正则",slug:"数字正则",children:[]},{level:2,title:"身份证号正则",slug:"身份证号正则",children:[]},{level:2,title:"URL正则",slug:"url正则",children:[]},{level:2,title:"IPv4地址正则",slug:"ipv4地址正则",children:[]},{level:2,title:"十六进制颜色正则",slug:"十六进制颜色正则",children:[]},{level:2,title:"日期正则",slug:"日期正则",children:[]},{level:2,title:"车牌号正则",slug:"车牌号正则",children:[]},{level:2,title:"包含中文正则",slug:"包含中文正则",children:[]},{level:2,title:"更多",slug:"更多",children:[]},{level:2,title:"今日图 - 全栈工程师的日常",slug:"今日图-全栈工程师的日常",children:[]}],filePathRelative:"RegExp/前端表单验证常用的正则表达式.md",git:{updatedTime:1650786686e3}}},7781:(n,s,a)=>{a.r(s),a.d(s,{default:()=>c});var e=a(6252);const p=a.p+"assets/img/16ab3b4a6d027048.1135d1be.gif",t=(0,e.uE)('<h1 id="前端表单验证常用的正则表达式" tabindex="-1"><a class="header-anchor" href="#前端表单验证常用的正则表达式" aria-hidden="true">#</a> 前端表单验证常用的正则表达式</h1><h2 id="用户名正则" tabindex="-1"><a class="header-anchor" href="#用户名正则" aria-hidden="true">#</a> 用户名正则</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//用户名正则，4到16位（字母，数字，下划线，减号）</span>\n<span class="token keyword">var</span> uPattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z0-9_-]{4,16}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n<span class="token comment">//输出 true</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>uPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;caibaojian&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//密码的强度必须是包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间。</span>\n\n<span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[\\da-zA-Z]{8,10}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="密码强度正则" tabindex="-1"><a class="header-anchor" href="#密码强度正则" aria-hidden="true">#</a> 密码强度正则</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//密码强度正则，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符</span>\n<span class="token keyword">var</span> pPattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^.*(?=.{6,})(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&amp;*? ]).*$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;caibaojian#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//密码长度6-12位，有数字，小写字母和大写字母组成，但至少包括两种字符</span>\n<span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">((?=.*[0-9])(?=.*[a-z])|(?=.*[0-9])(?=.*[A-Z])|(?=.*[a-z])(?=.*[A-Z]))^[0-9A-Za-z]{6,12}$</span><span class="token regex-delimiter">/</span></span>\n<span class="token comment">//或者</span>\n<span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?!^[0-9]{6,12}$)(?!^[a-z]{6,12}$)(?!^[A-Z]{6,12}$)^[0-9A-Za-z]{6,12}$</span><span class="token regex-delimiter">/</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="整数正则" tabindex="-1"><a class="header-anchor" href="#整数正则" aria-hidden="true">#</a> 整数正则</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//正整数正则</span>\n<span class="token keyword">var</span> posPattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n<span class="token comment">//负整数正则</span>\n<span class="token keyword">var</span> negPattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^-\\d+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n<span class="token comment">//整数正则</span>\n<span class="token keyword">var</span> intPattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^-?\\d+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n<span class="token comment">//输出 true</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>posPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;42&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//输出 true</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>negPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;-42&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//输出 true</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>intPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;-42&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="数字正则" tabindex="-1"><a class="header-anchor" href="#数字正则" aria-hidden="true">#</a> 数字正则</h2><p>可以是整数也可以是浮点数</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//正数正则</span>\n<span class="token keyword">var</span> posPattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\d*.?\\d$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n<span class="token comment">//负数正则</span>\n<span class="token keyword">var</span> negPattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^-\\d*.?\\d$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n<span class="token comment">//数字正则</span>\n<span class="token keyword">var</span> numPattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^-?\\d*.?\\d$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>posPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;42.2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>negPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;-42.2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;-42.2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="身份证号正则" tabindex="-1"><a class="header-anchor" href="#身份证号正则" aria-hidden="true">#</a> 身份证号正则</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//15位：</span>\n<span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n<span class="token comment">//18位：</span>\n<span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="url正则" tabindex="-1"><a class="header-anchor" href="#url正则" aria-hidden="true">#</a> URL正则</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> urlP <span class="token operator">=</span> <span class="token operator">/</span><span class="token punctuation">(</span>http<span class="token operator">|</span>ftp<span class="token operator">|</span>https<span class="token punctuation">)</span><span class="token operator">:</span><span class="token operator">/</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[w-_] (.[w-_] ) ([w-.,@?^=%&amp;:/~ #]*[w-@?^=%&amp;/~ #])?</span><span class="token regex-delimiter">/</span></span>\n<span class="token comment">//输出 true</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>urlP<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;http://caibaojian.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="ipv4地址正则" tabindex="-1"><a class="header-anchor" href="#ipv4地址正则" aria-hidden="true">#</a> IPv4地址正则</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//ipv4地址正则</span>\n<span class="token keyword">var</span> ipP <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n<span class="token comment">//输出 true</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ipP<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;115.28.47.26&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="十六进制颜色正则" tabindex="-1"><a class="header-anchor" href="#十六进制颜色正则" aria-hidden="true">#</a> 十六进制颜色正则</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//RGB Hex颜色正则</span>\n<span class="token keyword">var</span> cPattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n<span class="token comment">//输出 true</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;#b8b8b8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="日期正则" tabindex="-1"><a class="header-anchor" href="#日期正则" aria-hidden="true">#</a> 日期正则</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//“yyyy-mm-dd” 格式的日期校验，已考虑平闰年。</span>\n\n<span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n\n\n<span class="token comment">//匹配时间  13:09</span>\n  <span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">1</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span>$<span class="token operator">/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="车牌号正则" tabindex="-1"><a class="header-anchor" href="#车牌号正则" aria-hidden="true">#</a> 车牌号正则</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//车牌号正则</span>\n<span class="token keyword">var</span> cPattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n<span class="token comment">//输出 true</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;粤B39006&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="包含中文正则" tabindex="-1"><a class="header-anchor" href="#包含中文正则" aria-hidden="true">#</a> 包含中文正则</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//包含中文正则</span>\n<span class="token keyword">var</span> cnPattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[u4E00-u9FA5]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n<span class="token comment">//输出 true</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cnPattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;蔡宝坚&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="更多" tabindex="-1"><a class="header-anchor" href="#更多" aria-hidden="true">#</a> 更多</h2><ul><li>https://github.com/any86/any-rule</li></ul><h2 id="今日图-全栈工程师的日常" tabindex="-1"><a class="header-anchor" href="#今日图-全栈工程师的日常" aria-hidden="true">#</a> 今日图 - 全栈工程师的日常</h2><p><img src="'+p+'" alt="16ab3b4a6d027048.gif"></p>',28),o={},c=(0,a(3744).Z)(o,[["render",function(n,s){return t}]])}}]);