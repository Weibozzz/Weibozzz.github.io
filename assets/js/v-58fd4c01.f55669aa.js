(self.webpackChunkweiboqianduan=self.webpackChunkweiboqianduan||[]).push([[1629],{890:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-58fd4c01",path:"/JS/newFeatures/set%E5%92%8Cmap.html",title:"set和map",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Set",slug:"set",children:[{level:3,title:"例子",slug:"例子",children:[]},{level:3,title:"api",slug:"api",children:[]}]},{level:2,title:"WeakSet",slug:"weakset",children:[{level:3,title:"语法",slug:"语法",children:[]},{level:3,title:"方法",slug:"方法",children:[]}]},{level:2,title:"map",slug:"map",children:[{level:3,title:"属性和方法",slug:"属性和方法",children:[]},{level:3,title:"遍历",slug:"遍历",children:[]},{level:3,title:"与其他数据结构的互相转换",slug:"与其他数据结构的互相转换",children:[]}]},{level:2,title:"weakMap",slug:"weakmap",children:[{level:3,title:"语法",slug:"语法-1",children:[]},{level:3,title:"用途",slug:"用途",children:[]}]},{level:2,title:"引用",slug:"引用",children:[]},{level:2,title:"今日图 - 如何证明豹和老虎都是猫科动物",slug:"今日图-如何证明豹和老虎都是猫科动物",children:[]}],filePathRelative:"JS/newFeatures/set和map.md",git:{updatedTime:1627026748e3}}},4066:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>cn});var e=a(6252);const t=a.p+"assets/img/16bb5bc8e450a571.f743d573.png",l=(0,e.Wm)("h1",{id:"set和map",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#set和map","aria-hidden":"true"},"#"),(0,e.Uk)(" set和map")],-1),m=(0,e.Wm)("h2",{id:"set",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#set","aria-hidden":"true"},"#"),(0,e.Uk)(" Set")],-1),c=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"ES6"),(0,e.Uk)(" 提供了新的数据结构 "),(0,e.Wm)("code",null,"Set"),(0,e.Uk)("。它类似于数组，但是成员的值都是唯一的，没有重复的值。")],-1),o=(0,e.Wm)("h3",{id:"例子",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#例子","aria-hidden":"true"},"#"),(0,e.Uk)(" 例子")],-1),p=(0,e.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-javascript"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" s "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token class-name"},"Set"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Wm)("span",{class:"token number"},"2"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"3"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"5"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"4"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"5"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"2"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"2"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"forEach"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token parameter"},"x"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token operator"},"=>"),(0,e.Uk)(" s"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"add"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("x"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n"),(0,e.Wm)("span",{class:"token keyword"},"for"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token keyword"},"let"),(0,e.Uk)(" i "),(0,e.Wm)("span",{class:"token keyword"},"of"),(0,e.Uk)(" s"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  console"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"log"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("i"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"// 2 3 5 4"),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"4"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"5"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"6"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"7"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"8"),(0,e.Wm)("br")])],-1),u=(0,e.Wm)("h3",{id:"api",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#api","aria-hidden":"true"},"#"),(0,e.Uk)(" api")],-1),W=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"Set.prototype.constructor"),(0,e.Uk)("：构造函数，默认就是Set函数。")])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"Set.prototype.size"),(0,e.Uk)("：返回Set实例的成员总数。")])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"Set.prototype.add(value)"),(0,e.Uk)("：添加某个值，返回 Set 结构本身。")])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"Set.prototype.delete(value)"),(0,e.Uk)("：删除某个值，返回一个布尔值，表示删除是否成功。")])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"Set.prototype.has(value)"),(0,e.Uk)("：返回一个布尔值，表示该值是否为Set的成员。")])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"Set.prototype.clear()"),(0,e.Uk)("：清除所有成员，没有返回值。")])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"Set.prototype.keys()"),(0,e.Uk)("：返回键名的遍历器")])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"Set.prototype.values()"),(0,e.Uk)("：返回键值的遍历器")])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"Set.prototype.entries()"),(0,e.Uk)("：返回键值对的遍历器")])]),(0,e.Wm)("li",null,[(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"Set.prototype.forEach()"),(0,e.Uk)("：使用回调函数遍历每个成员")])])],-1),k=(0,e.Wm)("p",null,"遍历实例",-1),i=(0,e.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-javascript"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token keyword"},"let"),(0,e.Uk)(" set "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token class-name"},"Set"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Wm)("span",{class:"token string"},"'red'"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token string"},"'green'"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token string"},"'blue'"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n"),(0,e.Wm)("span",{class:"token keyword"},"for"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token keyword"},"let"),(0,e.Uk)(" item "),(0,e.Wm)("span",{class:"token keyword"},"of"),(0,e.Uk)(" set"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"keys"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  console"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"log"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("item"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"// red"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"// green"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"// blue"),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"4"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"5"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"6"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"7"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"8"),(0,e.Wm)("br")])],-1),r=(0,e.Wm)("h2",{id:"weakset",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#weakset","aria-hidden":"true"},"#"),(0,e.Uk)(" WeakSet")],-1),d=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"WeakSet"),(0,e.Uk)(" 结构与 "),(0,e.Wm)("code",null,"Set"),(0,e.Uk)(" 类似，也是不重复的值的集合。但是，它与 "),(0,e.Wm)("code",null,"Set"),(0,e.Uk)(" 有两个区别。")],-1),U=(0,e.Wm)("p",null,[(0,e.Uk)("首先，"),(0,e.Wm)("code",null,"WeakSet"),(0,e.Uk)(" 的成员只能是对象，而不能是其他类型的值。")],-1),b=(0,e.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-javascript"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" ws "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token class-name"},"WeakSet"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nws"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"add"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token number"},"1"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"// TypeError: Invalid value used in weak set"),(0,e.Uk)("\nws"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"add"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token function"},"Symbol"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"// TypeError: invalid value used in weak set"),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"4"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"5"),(0,e.Wm)("br")])],-1),h=(0,e.Wm)("p",null,[(0,e.Wm)("strong",null,[(0,e.Wm)("code",null,"WeakSet"),(0,e.Uk)(" 中的对象都是弱引用，即垃圾回收机制不考虑 "),(0,e.Wm)("code",null,"WeakSet"),(0,e.Uk)(" 对该对象的引用，也就是说，如果其他对象都不再引用该对象，那么垃圾回收机制会自动回收该对象所占用的内存，不考虑该对象还存在于 "),(0,e.Wm)("code",null,"WeakSet"),(0,e.Uk)(" 之中")])],-1),g=(0,e.Wm)("h3",{id:"语法",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#语法","aria-hidden":"true"},"#"),(0,e.Uk)(" 语法")],-1),w=(0,e.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-javascript"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" a "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Wm)("span",{class:"token number"},"1"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"2"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Wm)("span",{class:"token number"},"3"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"4"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" ws "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token class-name"},"WeakSet"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("a"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"// WeakSet {[1, 2], [3, 4]}"),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br")])],-1),y=(0,e.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-javascript"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" b "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Wm)("span",{class:"token number"},"3"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"4"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" ws "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token class-name"},"WeakSet"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("b"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"// Uncaught TypeError: Invalid value used in weak set(…)"),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br")])],-1),f=(0,e.Wm)("h3",{id:"方法",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#方法","aria-hidden":"true"},"#"),(0,e.Uk)(" 方法")],-1),v=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"WeakSet.prototype.add(value)"),(0,e.Uk)("：向 WeakSet 实例添加一个新成员。")]),(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"WeakSet.prototype.delete(value)"),(0,e.Uk)("：清除 WeakSet 实例的指定成员。")]),(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"WeakSet.prototype.has(value)"),(0,e.Uk)("：返回一个布尔值，表示某个值是否在")])],-1),M=(0,e.Wm)("p",null,"下面是一个例子。",-1),S=(0,e.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-javascript"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" ws "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token class-name"},"WeakSet"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" obj "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"{"),(0,e.Wm)("span",{class:"token punctuation"},"}"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" foo "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"{"),(0,e.Wm)("span",{class:"token punctuation"},"}"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\nws"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"add"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("window"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nws"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"add"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("obj"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\nws"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"has"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("window"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token comment"},"// true"),(0,e.Uk)("\nws"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"has"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("foo"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("    "),(0,e.Wm)("span",{class:"token comment"},"// false"),(0,e.Uk)("\n\nws"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"delete"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("window"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nws"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"has"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("window"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("    "),(0,e.Wm)("span",{class:"token comment"},"// false"),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"4"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"5"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"6"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"7"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"8"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"9"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"10"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"11"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"12"),(0,e.Wm)("br")])],-1),j=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"WeakSet"),(0,e.Uk)(" 没有"),(0,e.Wm)("code",null,"size"),(0,e.Uk)("属性，没有办法遍历它的成员。")],-1),x=(0,e.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-javascript"},[(0,e.Wm)("code",null,[(0,e.Uk)("ws"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Uk)("size "),(0,e.Wm)("span",{class:"token comment"},"// undefined"),(0,e.Uk)("\nws"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Uk)("forEach "),(0,e.Wm)("span",{class:"token comment"},"// undefined"),(0,e.Uk)("\n\nws"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"forEach"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token keyword"},"function"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token parameter"},"item"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" console"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"log"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token string"},"'WeakSet has '"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token operator"},"+"),(0,e.Uk)(" item"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},"}"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"// TypeError: undefined is not a function"),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"4"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"5"),(0,e.Wm)("br")])],-1),E=(0,e.Wm)("p",null,[(0,e.Uk)("上面代码试图获取"),(0,e.Wm)("code",null,"size"),(0,e.Uk)("和"),(0,e.Wm)("code",null,"forEach"),(0,e.Uk)("属性，结果都不能成功。")],-1),D=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"WeakSet"),(0,e.Uk)(" 不能遍历，是因为成员都是弱引用，随时可能消失，遍历机制无法保证成员的存在，很可能刚刚遍历结束，成员就取不到了。"),(0,e.Wm)("code",null,"WeakSet"),(0,e.Uk)(" 的一个用处，是储存 "),(0,e.Wm)("code",null,"DOM"),(0,e.Uk)(" 节点，而不用担心这些节点从文档移除时，会引发内存泄漏。")],-1),N=(0,e.Wm)("h2",{id:"map",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#map","aria-hidden":"true"},"#"),(0,e.Uk)(" map")],-1),z=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"JavaScript"),(0,e.Uk)(" 的对象（"),(0,e.Wm)("code",null,"Object"),(0,e.Uk)("），本质上是键值对的集合（Hash 结构），但是传统上只能用字符串当作键。这给它的使用带来了很大的限制。")],-1),O=(0,e.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-javascript"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" data "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"{"),(0,e.Wm)("span",{class:"token punctuation"},"}"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" element "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(" document"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"getElementById"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token string"},"'myDiv'"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\ndata"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("element"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token string"},"'metadata'"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\ndata"),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Wm)("span",{class:"token string"},"'[object HTMLDivElement]'"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token comment"},'// "metadata"'),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"4"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"5"),(0,e.Wm)("br")])],-1),T=(0,e.Wm)("p",null,[(0,e.Uk)("上面代码原意是将一个 "),(0,e.Wm)("code",null,"DOM"),(0,e.Uk)(" 节点作为对象data的键，但是由于对象只接受字符串作为键名，所以element被自动转为字符串[object HTMLDivElement]。")],-1),C=(0,e.Wm)("p",null,[(0,e.Uk)("为了解决这个问题，"),(0,e.Wm)("code",null,"ES6"),(0,e.Uk)(" 提供了 "),(0,e.Wm)("code",null,"Map"),(0,e.Uk)(" 数据结构")],-1),I=(0,e.Wm)("p",null,[(0,e.Uk)("注意，只有对同一个对象的引用，"),(0,e.Wm)("code",null,"Map"),(0,e.Uk)(" 结构才将其视为同一个键。这一点要非常小心。")],-1),J=(0,e.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-javascript"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" map "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token class-name"},"Map"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\nmap"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"set"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Wm)("span",{class:"token string"},"'a'"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"555"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nmap"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"get"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Wm)("span",{class:"token string"},"'a'"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token comment"},"// unde"),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"4"),(0,e.Wm)("br")])],-1),H=(0,e.Wm)("p",null,[(0,e.Wm)("strong",null,[(0,e.Uk)("如果 "),(0,e.Wm)("code",null,"Map"),(0,e.Uk)(" 的键是一个简单类型的值（数字、字符串、布尔值），则只要两个值严格相等，"),(0,e.Wm)("code",null,"Map"),(0,e.Uk)(" 将其视为一个键，比如0和-0就是一个键，布尔值true和字符串true则是两个不同的键。另外，undefined和null也是两个不同的键。虽然NaN不严格相等于自身，但 Map 将其视为同一个键。")])],-1),L=(0,e.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-javascript"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token keyword"},"let"),(0,e.Uk)(" map "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token class-name"},"Map"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\nmap"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"set"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token operator"},"-"),(0,e.Wm)("span",{class:"token number"},"0"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"123"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nmap"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"get"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token operator"},"+"),(0,e.Wm)("span",{class:"token number"},"0"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token comment"},"// 123"),(0,e.Uk)("\n\nmap"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"set"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token boolean"},"true"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"1"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nmap"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"set"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token string"},"'true'"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"2"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nmap"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"get"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token boolean"},"true"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token comment"},"// 1"),(0,e.Uk)("\n\nmap"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"set"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token keyword"},"undefined"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"3"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nmap"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"set"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token keyword"},"null"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"4"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nmap"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"get"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token keyword"},"undefined"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token comment"},"// 3"),(0,e.Uk)("\n\nmap"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"set"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token number"},"NaN"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"123"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nmap"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"get"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token number"},"NaN"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token comment"},"// 123"),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"4"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"5"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"6"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"7"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"8"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"9"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"10"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"11"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"12"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"13"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"14"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"15"),(0,e.Wm)("br")])],-1),q=(0,e.Wm)("h3",{id:"属性和方法",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#属性和方法","aria-hidden":"true"},"#"),(0,e.Uk)(" 属性和方法")],-1),B=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"size"),(0,e.Uk)(":size属性返回 Map 结构的成员总数。")]),(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"Map.prototype.set(key, value)"),(0,e.Uk)(":set方法返回的是当前的Map对象，因此可以采用链式写法")]),(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"Map.prototype.get(key)："),(0,e.Uk)("get方法读取key对应的键值，如果找不到key，返回undefined。")]),(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"Map.prototype.has(key)"),(0,e.Uk)(":has方法返回一个布尔值，表示某个键是否在当前 Map 对象之中。")]),(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"Map.prototype.delete(key)"),(0,e.Uk)("：delete方法删除某个键，返回true。如果删除失败，返回false。")]),(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"Map.prototype.clear()"),(0,e.Uk)(":clear方法清除所有成员，没有返回值。")])],-1),F=(0,e.Wm)("h3",{id:"遍历",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#遍历","aria-hidden":"true"},"#"),(0,e.Uk)(" 遍历")],-1),P=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,"Map.prototype.keys()：返回键名的遍历器。"),(0,e.Wm)("li",null,"Map.prototype.values()：返回键值的遍历器。"),(0,e.Wm)("li",null,"Map.prototype.entries()：返回所有成员的遍历器。"),(0,e.Wm)("li",null,"Map.prototype.forEach()：遍历 Map 的所有成员。")],-1),A=(0,e.Wm)("h3",{id:"与其他数据结构的互相转换",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#与其他数据结构的互相转换","aria-hidden":"true"},"#"),(0,e.Uk)(" 与其他数据结构的互相转换")],-1),R=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,"Map 转为数组：使用扩展运算符（...）。"),(0,e.Wm)("li",null,"数组 转为 Map"),(0,e.Wm)("li",null,"Map 转为对象"),(0,e.Wm)("li",null,"对象转为 Map"),(0,e.Wm)("li",null,"Map 转为 JSON"),(0,e.Wm)("li",null,"JSON 转为 Map")],-1),Y=(0,e.Wm)("h2",{id:"weakmap",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#weakmap","aria-hidden":"true"},"#"),(0,e.Uk)(" weakMap")],-1),G=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"WeakMap"),(0,e.Uk)("结构与"),(0,e.Wm)("code",null,"Map"),(0,e.Uk)("结构类似，也是用于生成键值对的集合。")],-1),K=(0,e.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-javascript"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token comment"},"// WeakMap 可以使用 set 方法添加成员"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" wm1 "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token class-name"},"WeakMap"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" key "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"{"),(0,e.Uk)("foo"),(0,e.Wm)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"1"),(0,e.Wm)("span",{class:"token punctuation"},"}"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nwm1"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"set"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("key"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"2"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nwm1"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"get"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("key"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token comment"},"// 2"),(0,e.Uk)("\n\n"),(0,e.Wm)("span",{class:"token comment"},"// WeakMap 也可以接受一个数组，"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token comment"},"// 作为构造函数的参数"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" k1 "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Wm)("span",{class:"token number"},"1"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"2"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"3"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" k2 "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Wm)("span",{class:"token number"},"4"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"5"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"6"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token keyword"},"const"),(0,e.Uk)(" wm2 "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token class-name"},"WeakMap"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("k1"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token string"},"'foo'"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"["),(0,e.Uk)("k2"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token string"},"'bar'"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},"]"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nwm2"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"get"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("k2"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token comment"},'// "bar"'),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"4"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"5"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"6"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"7"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"8"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"9"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"10"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"11"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"12"),(0,e.Wm)("br")])],-1),Q=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"WeakMap"),(0,e.Uk)("与"),(0,e.Wm)("code",null,"Map"),(0,e.Uk)("的区别有两点。")],-1),V=(0,e.Wm)("p",null,[(0,e.Uk)("首先，"),(0,e.Wm)("code",null,"WeakMap"),(0,e.Uk)("只接受对象作为键名（"),(0,e.Wm)("code",null,"null"),(0,e.Uk)("除外），不接受其他类型的值作为键名。 其次，"),(0,e.Wm)("code",null,"WeakMap"),(0,e.Uk)("的键名所指向的对象，不计入垃圾回收机制。")],-1),X=(0,e.Wm)("h3",{id:"语法-1",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#语法-1","aria-hidden":"true"},"#"),(0,e.Uk)(" 语法")],-1),Z=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"WeakMap"),(0,e.Uk)(" 与 "),(0,e.Wm)("code",null,"Map"),(0,e.Uk)(" 在 "),(0,e.Wm)("code",null,"API"),(0,e.Uk)(" 上的区别主要是两个， 一是没有遍历操作（即没有"),(0,e.Wm)("code",null,"keys()"),(0,e.Uk)("、"),(0,e.Wm)("code",null,"values()"),(0,e.Uk)("和"),(0,e.Wm)("code",null,"entries()"),(0,e.Uk)("方法），也没有"),(0,e.Wm)("code",null,"size"),(0,e.Uk)("属性。 因为没有办法列出所有键名，某个键名是否存在完全不可预测，跟垃圾回收机制是否运行相关。这一刻可以取到键名，下一刻垃圾回收机制突然运行了，这个键名就没了，为了防止出现不确定性，就统一规定不能取到键名。二是无法清空，即不支持"),(0,e.Wm)("code",null,"clear"),(0,e.Uk)("方法。 因此，"),(0,e.Wm)("code",null,"WeakMap"),(0,e.Uk)("只有四个方法可用："),(0,e.Wm)("code",null,"get()"),(0,e.Uk)("、"),(0,e.Wm)("code",null,"set()"),(0,e.Uk)("、"),(0,e.Wm)("code",null,"has()"),(0,e.Uk)("、"),(0,e.Wm)("code",null,"delete()"),(0,e.Uk)("。")],-1),$=(0,e.Wm)("h3",{id:"用途",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#用途","aria-hidden":"true"},"#"),(0,e.Uk)(" 用途")],-1),_=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"WeakMap"),(0,e.Uk)(" 应用的典型场合就是 "),(0,e.Wm)("code",null,"DOM"),(0,e.Uk)(" 节点作为键名。下面是一个例子。")],-1),nn=(0,e.Wm)("div",{class:"language-javascript ext-js line-numbers-mode"},[(0,e.Wm)("pre",{class:"language-javascript"},[(0,e.Wm)("code",null,[(0,e.Wm)("span",{class:"token keyword"},"let"),(0,e.Uk)(" myElement "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(" document"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"getElementById"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token string"},"'logo'"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token keyword"},"let"),(0,e.Uk)(" myWeakmap "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e.Wm)("span",{class:"token keyword"},"new"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token class-name"},"WeakMap"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\nmyWeakmap"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"set"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("myElement"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"{"),(0,e.Uk)("timesClicked"),(0,e.Wm)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token number"},"0"),(0,e.Wm)("span",{class:"token punctuation"},"}"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\nmyElement"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"addEventListener"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token string"},"'click'"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token keyword"},"function"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e.Wm)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e.Wm)("span",{class:"token keyword"},"let"),(0,e.Uk)(" logoData "),(0,e.Wm)("span",{class:"token operator"},"="),(0,e.Uk)(" myWeakmap"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Wm)("span",{class:"token function"},"get"),(0,e.Wm)("span",{class:"token punctuation"},"("),(0,e.Uk)("myElement"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n  logoData"),(0,e.Wm)("span",{class:"token punctuation"},"."),(0,e.Uk)("timesClicked"),(0,e.Wm)("span",{class:"token operator"},"++"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e.Wm)("span",{class:"token punctuation"},"}"),(0,e.Wm)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e.Wm)("span",{class:"token boolean"},"false"),(0,e.Wm)("span",{class:"token punctuation"},")"),(0,e.Wm)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n")])]),(0,e.Wm)("div",{class:"line-numbers"},[(0,e.Wm)("span",{class:"line-number"},"1"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"2"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"3"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"4"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"5"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"6"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"7"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"8"),(0,e.Wm)("br"),(0,e.Wm)("span",{class:"line-number"},"9"),(0,e.Wm)("br")])],-1),sn=(0,e.Wm)("p",null,[(0,e.Uk)("上面代码中，"),(0,e.Wm)("code",null,"myElement"),(0,e.Uk)("是一个"),(0,e.Wm)("code",null,"DOM"),(0,e.Uk)("节点，每当发生click事件，就更新一下状态。我们将这个状态作为键值放在 WeakMap 里，对应的键名就是"),(0,e.Wm)("code",null,"myElement"),(0,e.Uk)("。一旦这个 DOM 节点删除，该状态就会自动消失，不存在内存泄漏风险。")],-1),an=(0,e.Wm)("h2",{id:"引用",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#引用","aria-hidden":"true"},"#"),(0,e.Uk)(" 引用")],-1),en=(0,e.Wm)("p",null,"详细介绍请看引用",-1),tn=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,"https://es6.ruanyifeng.com/?search=weakset&x=0&y=0#docs/set-map")],-1),ln=(0,e.Wm)("h2",{id:"今日图-如何证明豹和老虎都是猫科动物",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#今日图-如何证明豹和老虎都是猫科动物","aria-hidden":"true"},"#"),(0,e.Uk)(" 今日图 - 如何证明豹和老虎都是猫科动物")],-1),mn=(0,e.Wm)("p",null,[(0,e.Wm)("img",{src:t,alt:"16bb5bc8e450a571.png"})],-1),cn={render:function(n,s){return(0,e.wg)(),(0,e.j4)(e.HY,null,[l,m,c,o,p,u,W,k,i,r,d,U,b,h,g,w,y,f,v,M,S,j,x,E,D,N,z,O,T,C,I,J,H,L,q,B,F,P,A,R,Y,G,K,Q,V,X,Z,$,_,nn,sn,an,en,tn,ln,mn],64)}}}}]);