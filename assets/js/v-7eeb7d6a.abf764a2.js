"use strict";(self.webpackChunkweiboqianduan=self.webpackChunkweiboqianduan||[]).push([[3716],{7137:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-7eeb7d6a",path:"/Webpack/loader.html",title:"loader",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"loader",slug:"loader-1",children:[]},{level:2,title:"写一个loader例子",slug:"写一个loader例子",children:[{level:3,title:"package.json",slug:"package-json",children:[]},{level:3,title:".babelrc",slug:"babelrc",children:[]},{level:3,title:"src/loader.js",slug:"src-loader-js",children:[]},{level:3,title:"webpack.config.js",slug:"webpack-config-js",children:[]}]},{level:2,title:"使用场景",slug:"使用场景",children:[{level:3,title:"px 转化 rpx",slug:"px-转化-rpx",children:[]}]},{level:2,title:"引用",slug:"引用",children:[]},{level:2,title:"结语",slug:"结语",children:[]}],filePathRelative:"Webpack/loader.md",git:{updatedTime:1626767622e3}}},4416:(n,s,a)=>{a.r(s),a.d(s,{default:()=>g});var e=a(6252);const p=(0,e.uE)('<h1 id="loader" tabindex="-1"><a class="header-anchor" href="#loader" aria-hidden="true">#</a> loader</h1><h2 id="loader-1" tabindex="-1"><a class="header-anchor" href="#loader-1" aria-hidden="true">#</a> loader</h2><p><code>webpack</code> 可以使用 <code>loader</code> 来预处理文件。 这允许你打包除 <code>JavaScript</code> 之外的任何静态资源。 你可以使用 <code>Node.js</code> 来很简单地编写自己的 <code>loader</code>。</p><h2 id="写一个loader例子" tabindex="-1"><a class="header-anchor" href="#写一个loader例子" aria-hidden="true">#</a> 写一个loader例子</h2><p><code>// src/example.html</code> 我们把这个文件变为 <code>hey weibozzz!</code></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>\nHey [name]!\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="package-json" tabindex="-1"><a class="header-anchor" href="#package-json" aria-hidden="true">#</a> package.json</h3><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;loader&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;jest&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;keywords&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;license&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ISC&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;devDependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;babel-jest&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^24.9.0&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;babel-preset-env&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^1.7.0&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;jest&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^24.9.0&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;memory-fs&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^0.5.0&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;webpack&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.41.2&quot;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;dependencies&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;file-loader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.2.0&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;webpack&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^4.41.2&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;webpack-cli&quot;</span><span class="token operator">:</span> <span class="token string">&quot;^3.3.10&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="babelrc" tabindex="-1"><a class="header-anchor" href="#babelrc" aria-hidden="true">#</a> .babelrc</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{\n  &quot;presets&quot;: [[\n    &quot;env&quot;,\n    {\n      &quot;targets&quot;: {\n        &quot;node&quot;: &quot;4&quot;\n      }\n    }\n  ]]\n}\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="src-loader-js" tabindex="-1"><a class="header-anchor" href="#src-loader-js" aria-hidden="true">#</a> src/loader.js</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// loader-utils(不需要特地安装，装了webpack一套就自带)</span>\n<span class="token keyword">const</span> getOptions <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;loader-utils&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getOptions\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token function">getOptions</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  source <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\[name\\]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> source<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="webpack-config-js" tabindex="-1"><a class="header-anchor" href="#webpack-config-js" aria-hidden="true">#</a> webpack.config.js</h3><ol><li>常规方法</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./src/example.html&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(html)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">&#39;file-loader?name=[name].[ext]&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            <span class="token literal-property property">loader</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./src/loader.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;你好&#39;</span>\n            <span class="token punctuation">}</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ol start="2"><li>第二种引用方式</li></ol><p><code>loadername</code>! 前缀方式 比如有一个txt文件， 我们想通过<code>raw-loader</code>来获取整个<code>txt</code>文件里面的字符串内容。除了使用统一 <code>webpack config</code>配置的方式之外， 我们还可以在引入的时候，用这样的语法来引入：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> txt <span class="token keyword">from</span> <span class="token string">&quot;raw-loader!./1.txt&quot;</span><span class="token punctuation">;</span>\n<span class="token comment">// txt就是这个文件里面所有的内容</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>其实使用<code>webpack.config</code>文件统一配置loader后，最终也是会转成这 种方式使用loader再引入的。支持多个loader，语法: <code>loader1!loader2!yourfilename</code></p><p><code>query</code>替代<code>options</code></p><p>使用<code>loadername!</code> 前缀语法：<code>raw-loader?a=1&amp;b=2!./1.txt</code>，等价于<code>webpack</code>配置：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> {\n        test: /^1\\.txt$/,\n        exclude: /node_modules/,\n        use: [\n          { loader: &quot;raw-loader&quot;, options: { a: &#39;1&#39;, b: &#39;2&#39; } },\n        ]\n },\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景" aria-hidden="true">#</a> 使用场景</h2><h3 id="px-转化-rpx" tabindex="-1"><a class="header-anchor" href="#px-转化-rpx" aria-hidden="true">#</a> px 转化 rpx</h3><blockquote><p>一次很粗心，因为很久没写过小程序，把 rpx 都写成 px, 写了好多，一个一个改太麻烦了，关键还要乘2，我这暴脾气 受不了这种苦力活，就写了个核心如下</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>\nfs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;./index.scss&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">:(.+[^r])px</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>\n  <span class="token keyword">const</span> str <span class="token operator">=</span>  data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token string">&#39;: &#39;</span> <span class="token operator">+</span> b <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token string">&#39;rpx&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> strdata <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&#39;index2.scss&#39;</span><span class="token punctuation">,</span> strdata<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;文件已被保存&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="引用" tabindex="-1"><a class="header-anchor" href="#引用" aria-hidden="true">#</a> 引用</h2>',27),t=(0,e._)("li",null,"https://webpack.docschina.org/contribute/writing-a-loader/",-1),o=(0,e._)("li",null,"https://juejin.im/post/5e3389436fb9a02fef3a707a?utm_source=gold_browser_extension",-1),l={href:"https://zhuanlan.zhihu.com/p/28245984",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("webpack之loader和plugin简介"),c=(0,e._)("h2",{id:"结语",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#结语","aria-hidden":"true"},"#"),(0,e.Uk)(" 结语")],-1),u=(0,e.Uk)("分享别人写的 "),i=(0,e._)("code",null,"loader",-1),k=(0,e.Uk)(),b={href:"https://github.com/yeyan1996/async-catch-loader",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Uk)("async-catch-loader"),m={},g=(0,a(3744).Z)(m,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,(0,e._)("ul",null,[t,o,(0,e._)("li",null,[(0,e._)("a",l,[r,(0,e.Wm)(a)])])]),c,(0,e._)("p",null,[u,i,k,(0,e._)("a",b,[d,(0,e.Wm)(a)])])],64)}]])}}]);