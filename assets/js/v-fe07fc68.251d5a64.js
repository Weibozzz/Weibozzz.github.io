"use strict";(self.webpackChunkweiboqianduan=self.webpackChunkweiboqianduan||[]).push([[8939],{6182:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-fe07fc68",path:"/React/%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BAReact%E5%85%A8%E5%AE%B6%E6%A1%B6%E6%A1%86%E6%9E%B6%E6%95%99%E7%A8%8B.html",title:"从零搭建React全家桶框架教程",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"说明",slug:"说明",children:[]},{level:2,title:"init项目",slug:"init项目",children:[]},{level:2,title:"webpack",slug:"webpack",children:[]},{level:2,title:"命令优化",slug:"命令优化",children:[]},{level:2,title:"babel",slug:"babel",children:[]},{level:2,title:"react",slug:"react",children:[]},{level:2,title:"react-router",slug:"react-router",children:[{level:3,title:"使用 hooks",slug:"使用-hooks",children:[]},{level:3,title:"react-redux",slug:"react-redux",children:[]}]},{level:2,title:"combinReducers优化",slug:"combinreducers优化",children:[]}],filePathRelative:"React/从零搭建React全家桶框架教程.md",git:{updatedTime:1630390062e3}}},7010:(n,s,a)=>{a.r(s),a.d(s,{default:()=>Ra});var e=a(6252);const p=(0,e._)("h1",{id:"从零搭建react全家桶框架教程",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#从零搭建react全家桶框架教程","aria-hidden":"true"},"#"),(0,e.Uk)(" 从零搭建React全家桶框架教程")],-1),t=(0,e._)("h2",{id:"说明",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#说明","aria-hidden":"true"},"#"),(0,e.Uk)(" 说明")],-1),r=(0,e.Uk)("技术栈均是目前最新的。本文借鉴 "),o={href:"https://github.com/brickspert/blog/issues/1",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("从零搭建React全家桶框架教程"),c=(0,e.uE)('<ul><li>webpack 4.41.2</li><li>Babel 7.x</li><li>redux 4.0.4</li><li>React 16.12.0</li></ul><h2 id="init项目" tabindex="-1"><a class="header-anchor" href="#init项目" aria-hidden="true">#</a> init项目</h2><ol><li><p>创建文件夹并进入</p><p><code>mkdir react-family &amp;&amp; cd react-family</code></p></li><li><p>init npm</p><p><code>npm init</code> 按照提示填写项目基本信息</p></li></ol><h2 id="webpack" tabindex="-1"><a class="header-anchor" href="#webpack" aria-hidden="true">#</a> webpack</h2>',4),u=(0,e._)("p",null,[(0,e.Uk)("安装 "),(0,e._)("code",null,"webpack")],-1),i=(0,e._)("p",null,[(0,e._)("code",null,"npm install --save-dev webpack@3")],-1),b=(0,e._)("p",null,[(0,e.Uk)("Q: 什么时候用"),(0,e._)("code",null,"--save-dev"),(0,e.Uk)("，什么时候用"),(0,e._)("code",null,"--save"),(0,e.Uk)("？")],-1),d=(0,e.Uk)("A: "),m=(0,e._)("code",null,"--save-dev",-1),k=(0,e.Uk)(" 是你开发时候依赖的东西，"),g=(0,e._)("code",null,"--save",-1),v=(0,e.Uk)(" 是你发布之后还依赖的东西。看"),x={href:"https://segmentfault.com/q/1010000005163089",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Uk)("这里"),f=(0,e.Uk)("根据"),w={href:"https://doc.webpack-china.org/guides/getting-started",target:"_blank",rel:"noopener noreferrer"},_=(0,e.Uk)("webpack文档"),q=(0,e.Uk)("编写最基础的配置文件"),R=(0,e.uE)('<p>新建<code>webpack</code>开发配置文件 <code>touch webpack.dev.config.js</code></p><p><code>webpack.dev.config.js</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>const path = require(&#39;path&#39;);\n\nmodule.exports = {\n \n    /*入口*/\n    entry: path.join(__dirname, &#39;src/index.js&#39;),\n    \n    /*输出到dist文件夹，输出文件名字为bundle.js*/\n    output: {\n        path: path.join(__dirname, &#39;./dist&#39;),\n        filename: &#39;bundle.js&#39;\n    }\n};\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>',3),j=(0,e.uE)("<li><p>学会使用<code>webpack</code>编译文件</p><p>新建入口文件</p><p><code>mkdir src &amp;&amp; touch ./src/index.js</code></p><p><code>src/index.js</code> 添加内容</p><p><code>document.getElementById(&#39;app&#39;).innerHTML = &quot;Webpack works&quot;</code></p><p>现在我们执行命令 <code>webpack --config webpack.dev.config.js</code></p><blockquote><p>webpack如果没有全局安装，这里会报错哦。命令建议全局安装,同时需要全局安装 webpack-cli</p></blockquote><p>我们可以看到生成了<code>dist</code>文件夹和<code>bundle.js</code>。</p></li>",1),U=(0,e.uE)('<p>现在我们测试下~</p><p><code>dist</code>文件夹下面新建一个<code>index.html</code></p><p><code>touch ./dist/index.html</code></p><p><code>dist/index.html</code>填写内容</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;!doctype html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;./bundle.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>用浏览器打开<code>index.html</code>,可以看到<code>Webpack works</code>!</p>',6),y={href:"https://camo.githubusercontent.com/f011eda1205f66f52dea4c7d7d8ae6c0de1c8630/687474703a2f2f6f71636238646a6c772e626b742e636c6f7564646e2e636f6d2f7765627061636b2e706e67",target:"_blank",rel:"noopener noreferrer"},E=(0,e._)("img",{src:"https://camo.githubusercontent.com/f011eda1205f66f52dea4c7d7d8ae6c0de1c8630/687474703a2f2f6f71636238646a6c772e626b742e636c6f7564646e2e636f6d2f7765627061636b2e706e67",alt:"webpack"},null,-1),I=(0,e._)("p",null,[(0,e.Uk)("现在回头看下，我们做了什么或者说"),(0,e._)("code",null,"webpack"),(0,e.Uk)("做了什么。")],-1),C=(0,e._)("p",null,[(0,e.Uk)("把入口文件 "),(0,e._)("code",null,"index.js"),(0,e.Uk)(" 经过处理之后，生成 "),(0,e._)("code",null,"bundle.js"),(0,e.Uk)("。就这么简单。")],-1),S=(0,e.uE)('<h2 id="命令优化" tabindex="-1"><a class="header-anchor" href="#命令优化" aria-hidden="true">#</a> 命令优化</h2><p>Q：每次打包都得在根目录执行这么一长串命令<code>webpack --config webpack.dev.config.js</code>,能不打这么长吗？</p><p>A：修改<code>package.json</code>里面的<code>script</code>，增加<code>dev-build</code>。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>package.json\n  &quot;scripts&quot;: {\n    &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;,\n    &quot;dev-build&quot;: &quot;webpack --config webpack.dev.config.js&quot;\n  }\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>现在我们打包只需要执行<code>npm run dev-build</code>就可以啦！</p><p>参考地址：</p><p>http://www.ruanyifeng.com/blog/2016/10/npm_scripts.html</p><h2 id="babel" tabindex="-1"><a class="header-anchor" href="#babel" aria-hidden="true">#</a> babel</h2><blockquote><p>Babel 把用最新标准编写的 JavaScript 代码向下编译成可以在今天随处可用的版本。 这一过程叫做“源码到源码”编译， 也被称为转换编译。</p></blockquote><p>通俗的说，就是我们可以用ES6, ES7等来编写代码，Babel会把他们统统转为ES5。</p>',10),P={href:"https://github.com/babel/babel-loader",target:"_blank",rel:"noopener noreferrer"},H=(0,e.Uk)("babel-loader"),L=(0,e.Uk)("：使用 Babel 转换 JavaScript依赖关系的 Webpack 加载器"),T={href:"https://babeljs.io/docs/en/babel-core",target:"_blank",rel:"noopener noreferrer"},W=(0,e.Uk)("@babel/core"),B=(0,e.Uk)("：即 babel-core，将 ES6 代码转换为 ES5"),N={href:"https://babeljs.io/docs/en/babel-preset-env",target:"_blank",rel:"noopener noreferrer"},F=(0,e.Uk)("@babel/preset-env"),M=(0,e.Uk)("：即 babel-preset-env，根据您要支持的浏览器，决定使用哪些 transformations / plugins 和 polyfills，例如为旧浏览器提供现代浏览器的新特性"),A={href:"https://babeljs.io/docs/en/babel-preset-react",target:"_blank",rel:"noopener noreferrer"},D=(0,e.Uk)("@babel/preset-react"),O=(0,e.Uk)("：即 babel-preset-react，针对所有 React 插件的 Babel 预设，例如将 JSX 转换为函数"),G=(0,e.uE)('<p>**注：babel 7 使用了 <code>@babel</code> 命名空间来区分官方包，因此以前的官方包 babel-xxx 改成了 <code>@babel/xxx</code></p><p><code>npm install --save-dev @babel/core babel-loader @babel/preset-env @babel/preset-react</code></p><p>新建<code>babel</code>配置文件<code>.babelrc</code></p><p><code>touch .babelrc</code></p><p><code>.babelrc</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>  {\n  &quot;presets&quot;: [&quot;@babel/preset-env&quot;, &quot;@babel/preset-react&quot;]\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>修改<code>webpack.dev.config.js</code>，增加<code>babel-loader</code>！</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    /*src文件夹下面的以.js结尾的文件，要使用babel解析*/\n    /*cacheDirectory是用来缓存编译结果，下次编译加速*/\n    module: {\n        rules: [{\n            test: /\\.js$/,\n            use: [&#39;babel-loader?cacheDirectory=true&#39;],\n            include: path.join(__dirname, &#39;src&#39;)\n        }]\n    }\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>现在我们简单测试下，是否能正确转义ES6~</p><h2 id="react" tabindex="-1"><a class="header-anchor" href="#react" aria-hidden="true">#</a> react</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm install --save react react-dom\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>修改 <code>src/index.js</code>使用<code>react</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>import React from &#39;react&#39;;\nimport ReactDom from &#39;react-dom&#39;;\n\nReactDom.render(\n    &lt;div&gt;Hello React!&lt;/div&gt;, document.getElementById(&#39;app&#39;));\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>执行打包命令<code>webpack --config webpack.dev.config.js</code></p><p>打开<code>index.html</code> 看效果。</p><p>我们简单做下改进，把<code>Hello React</code>放到组件里面。体现组件化~</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd src\nmkdir components\ncd components\ntouch Hello.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>按照React语法，写一个Hello组件</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>import React, {Component} from &#39;react&#39;;\n\nexport default class Hello extends Component {\n    render() {\n        return (\n            &lt;div&gt;\n                Hello,React!\n            &lt;/div&gt;\n        )\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>然后让我们修改<code>src/index.js</code>，引用<code>Hello</code>组件！</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/index.js\nimport React from &#39;react&#39;;\nimport ReactDom from &#39;react-dom&#39;;\nimport Hello from &#39;./component/Hello&#39;;\n\nReactDom.render(\n    &lt;Hello/&gt;, document.getElementById(&#39;app&#39;));\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>在<strong>根目录</strong>执行打包命令</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>webpack --config webpack.dev.config.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>打开<code>index.html</code>看效果咯~</p><h2 id="react-router" tabindex="-1"><a class="header-anchor" href="#react-router" aria-hidden="true">#</a> react-router</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm install --save react-router-dom\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>新建<code>router</code>文件夹和组件</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd src\nmkdir router &amp;&amp; touch router/router.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',28),z=(0,e.Uk)("按照"),J=(0,e._)("code",null,"react-router",-1),Q={href:"http://reacttraining.cn/web/guides/quick-start",target:"_blank",rel:"noopener noreferrer"},$=(0,e.Uk)("文档"),K=(0,e.Uk)("编辑一个最基本的"),X=(0,e._)("code",null,"router.js",-1),Y=(0,e.Uk)("。包含两个页面"),V=(0,e._)("code",null,"home",-1),Z=(0,e.Uk)("和"),nn=(0,e._)("code",null,"page1",-1),sn=(0,e.Uk)("。"),an=(0,e.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/router/router.js\nimport React from &#39;react&#39;;\n\nimport {BrowserRouter as Router, Route, Switch, Link} from &#39;react-router-dom&#39;;\n\nimport Home from &#39;../pages/Home/Home&#39;;\nimport Page1 from &#39;../pages/Page1/Page1&#39;;\n\n\nconst getRouter = () =&gt; (\n    &lt;Router&gt;\n        &lt;div&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;Link to=&quot;/&quot;&gt;首页&lt;/Link&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;Link to=&quot;/page1&quot;&gt;Page1&lt;/Link&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;Switch&gt;\n                &lt;Route exact path=&quot;/&quot; component={Home}/&gt;\n                &lt;Route path=&quot;/page1&quot; component={Page1}/&gt;\n            &lt;/Switch&gt;\n        &lt;/div&gt;\n    &lt;/Router&gt;\n);\n\nexport default getRouter;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>新建页面文件夹</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd src\nmkdir pages\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>新建两个页面 <code>Home</code>,<code>Page1</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd src/pages\nmkdir Home &amp;&amp; touch Home/Home.js\nmkdir Page1 &amp;&amp; touch Page1/Page1.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>填充内容：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/pages/Home/Home.js\nimport React, {Component} from &#39;react&#39;;\n\nexport default class Home extends Component {\n    render() {\n        return (\n            &lt;div&gt;\n                this is home~\n            &lt;/div&gt;\n        )\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>Page1.js</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>import React, {Component} from &#39;react&#39;;\n\nexport default class Page1 extends Component {\n    render() {\n        return (\n            &lt;div&gt;\n                this is Page1~\n            &lt;/div&gt;\n        )\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>现在路由和页面建好了，我们在入口文件<code>src/index.js</code>引用Router。</p><p>修改<code>src/index.js</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>import React from &#39;react&#39;;\nimport ReactDom from &#39;react-dom&#39;;\n\nimport getRouter from &#39;./router/router&#39;;\n\nReactDom.render(\n    getRouter(), document.getElementById(&#39;app&#39;));\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>现在执行打包命令<code>npm run dev-build</code>。打开<code>index.html</code>查看效果啦！</p><p>那么问题来了~我们发现点击‘首页’和‘Page1’没有反应。不要惊慌，这是正常的。</p><p>我们之前一直用这个路径访问<code>index.html</code>，类似这样：<code>file:///F:/react/react-family/dist/index.html</code>。 这种路径了，不是我们想象中的路由那样的路径<code>http://localhost:3000</code>~我们需要配置一个简单的WEB服务器，指向 <code>index.html</code>~有下面两种方法来实现</p><ol><li><code>Nginx</code>, <code>Apache</code>, <code>IIS</code>等配置启动一个简单的的WEB服务器。</li><li>使用<code>webpack-dev-server</code>来配置启动WEB服务器。</li></ol><p>下一节，我们来使用第二种方法启动服务器。这一节的DEMO，先放这里。</p><h1 id="webpack-dev-server" tabindex="-1"><a class="header-anchor" href="#webpack-dev-server" aria-hidden="true">#</a> webpack-dev-server</h1><p>简单来说，<code>webpack-dev-server</code>就是一个小型的静态文件服务器。使用它，可以为<code>webpack</code>打包生成的资源文件提供Web服务。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm install webpack-dev-server --save-dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>2017.11.16补充：这里webpack-dev-server需要全局安装，要不后面用的时候要写相对路径。需要再执行这个 <code>npm install webpack-dev-server@2 -g</code></p></blockquote><p>修改<code>webpack.dev.config.js</code>,增加<code>webpack-dev-server</code>的配置。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>webpack.dev.config.js\n    devServer: {\n        contentBase: path.join(__dirname, &#39;./dist&#39;)\n    }\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>现在执行</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>webpack-dev-server --config webpack.dev.config.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',25),en=(0,e.Uk)("浏览器打开"),pn={href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer"},tn=(0,e.Uk)("http://localhost:8080"),rn=(0,e.Uk)("，OK,现在我们可以点击"),on=(0,e._)("code",null,"首页",-1),ln=(0,e.Uk)(","),cn=(0,e._)("code",null,"Page1",-1),un=(0,e.Uk)("了， 看URL地址变化啦！我们看到"),bn=(0,e._)("code",null,"react-router",-1),dn=(0,e.Uk)("已经成功了哦。"),mn=(0,e.uE)('<p>Q: <code>--content-base</code>是什么？</p><p>A：<code>URL的根目录。如果不设定的话，默认指向项目根目录。</code></p><p><strong>重要提示：webpack-dev-server编译后的文件，都存储在内存中，我们并不能看见的。你可以删除之前遗留的文件dist/bundle.js，仍然能正常打开网站！</strong></p><p>每次执行<code>webpack-dev-server --config webpack.dev.config.js</code>,要打很长的命令，我们修改<code>package.json</code>，增加<code>script-&gt;start</code>:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>  &quot;scripts&quot;: {\n    &quot;test&quot;: &quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;,\n    &quot;dev-build&quot;: &quot;webpack --config webpack.dev.config.js&quot;,\n    &quot;start&quot;: &quot;webpack-dev-server --config webpack.dev.config.js&quot;\n  }\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>下次执行<code>npm start</code>就可以了。</p>',6),kn=(0,e.Uk)("既然用到了"),gn=(0,e._)("code",null,"webpack-dev-server",-1),vn=(0,e.Uk)("，我们就看看"),xn={href:"https://doc.webpack-china.org/configuration/dev-server",target:"_blank",rel:"noopener noreferrer"},hn=(0,e.Uk)("它的其他的配置项"),fn=(0,e.Uk)("。 看了之后，发现有几个我们可以用的。"),wn=(0,e.uE)('<ul><li>color（CLI only） <code>console</code>中打印彩色日志</li><li>historyApiFallback 任意的<code>404</code>响应都被替代为<code>index.html</code>。有什么用呢？你现在运行 <code>npm start</code>，然后打开浏览器，访问<code>http://localhost:8080</code>,然后点击<code>Page1</code>到链接<code>http://localhost:8080/page1</code>， 然后刷新页面试试。是不是发现刷新后<code>404</code>了。为什么？<code>dist</code>文件夹里面并没有<code>page1.html</code>,当然会<code>404</code>了，所以我们需要配置 <code>historyApiFallback</code>，让所有的<code>404</code>定位到<code>index.html</code>。</li><li>host 指定一个<code>host</code>,默认是<code>localhost</code>。如果你希望服务器外部可以访问，指定如下：<code>host: &quot;0.0.0.0&quot;</code>。比如你用手机通过IP访问。</li><li>hot 启用<code>Webpack</code>的模块热替换特性。关于热模块替换，我下一小节专门讲解一下。</li><li>port 配置要监听的端口。默认就是我们现在使用的<code>8080</code>端口。</li><li>proxy 代理。比如在 <code>localhost:3000</code> 上有后端服务的话，你可以这样启用代理：</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    proxy: {\n      &quot;/api&quot;: &quot;http://localhost:3000&quot;\n    }\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>progress（CLI only） 将编译进度输出到控制台。</li></ul><p>根据这几个配置，修改下我们的<code>webpack-dev-server</code>的配置~</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>webpack.dev.config.js\n    devServer: {\n        port: 8080,\n        contentBase: path.join(__dirname, &#39;./dist&#39;),\n        historyApiFallback: true,\n        host: &#39;0.0.0.0&#39;\n    }\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>CLI ONLY</code>的需要在命令行中配置</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>package.json\n&quot;start&quot;: &quot;webpack-dev-server --config webpack.dev.config.js --color --progress&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>现在我们执行<code>npm start</code> 看看效果。是不是看到打包的时候有百分比进度？在<code>http://localhost:8080/page1</code>页面刷新是不是没问题了？ 用手机通过局域网IP是否可以访问到网站？</p><h1 id="模块热替换-hot-module-replacement" tabindex="-1"><a class="header-anchor" href="#模块热替换-hot-module-replacement" aria-hidden="true">#</a> 模块热替换（Hot Module Replacement）</h1>',9),_n=(0,e.Uk)("到目前，当我们修改代码的时候，浏览器会自动刷新，不信你可以去试试。（如果你的不会刷新，看看这个"),qn={href:"https://github.com/brickspert/blog/issues/1#editor",target:"_blank",rel:"noopener noreferrer"},Rn=(0,e.Uk)("调整文本编辑器"),jn=(0,e.Uk)("）"),Un=(0,e._)("p",null,"我相信看这个教程的人，应该用过别人的框架。我们在修改代码的时候，浏览器不会刷新，只会更新自己修改的那一块。我们也要实现这个效果。",-1),yn=(0,e.Uk)("我们看下"),En={href:"https://doc.webpack-china.org/guides/hot-module-replacement",target:"_blank",rel:"noopener noreferrer"},In=(0,e.Uk)("webpack模块热替换"),Cn=(0,e.Uk)("教程。"),Sn=(0,e.uE)('<p>我们接下来要这么修改</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>package.json` 增加 `--hot\n&quot;start&quot;: &quot;webpack-dev-server --config webpack.dev.config.js --color --progress --hot&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>src/index.js</code> 增加<code>module.hot.accept()</code>,如下。当模块更新的时候，通知<code>index.js</code>。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/index.js\nimport React from &#39;react&#39;;\nimport ReactDom from &#39;react-dom&#39;;\n\nimport getRouter from &#39;./router/router&#39;;\n\nif (module.hot) {\n    module.hot.accept();\n}\n\nReactDom.render(\n    getRouter(), document.getElementById(&#39;app&#39;));\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>现在我们执行<code>npm start</code>，打开浏览器，修改<code>Home.js</code>,看是不是不刷新页面的情况下，内容更新了？惊不惊喜？意不意外？</p><p><strong>做模块热替换，我们只改了几行代码，非常简单的。纸老虎一个~</strong></p><p>现在我需要说明下我们命令行使用的<code>--hot</code>，可以通过配置<code>webpack.dev.config.js</code>来替换， 向文档上那样,修改下面三处。但我们还是用<code>--hot</code>吧。下面的方式我们知道一下就行，我们不用。同样的效果。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>const webpack = require(&#39;webpack&#39;);\n\ndevServer: {\n    hot: true\n}\n\nplugins:[\n     new webpack.HotModuleReplacementPlugin()\n]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>HRM</code>配置其实有两种方式，一种<code>CLI</code>方式，一种<code>Node.js API</code>方式。我们用到的就是<code>CLI</code>方式，比较简单。 <code>Node.js API</code>方式，就是建一个<code>server.js</code>等等，网上大部分教程都是这种方式，这里不做讲解了。</p><p>你以为模块热替换到这里就结束了？no<s>no</s>no~</p><p>上面的配置对<code>react</code>模块的支持不是很好哦。</p><p>例如下面的<code>demo</code>，当模块热替换的时候，<code>state</code>会重置，这不是我们想要的。</p><p>修改<code>Home.js</code>,增加计数<code>state</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/pages/Home/Home.js\nimport React, {Component} from &#39;react&#39;;\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: 0\n        }\n    }\n\n    _handleClick() {\n        this.setState({\n            count: ++this.state.count\n        });\n    }\n\n    render() {\n        return (\n            &lt;div&gt;\n                this is home~&lt;br/&gt;\n                当前计数：{this.state.count}&lt;br/&gt;\n                &lt;button onClick={() =&gt; this._handleClick()}&gt;自增&lt;/button&gt;\n            &lt;/div&gt;\n        )\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>你可以测试一下，当我们修改代码的时候，<code>webpack</code>在更新页面的时候，也把<code>count</code>初始为0了。</p>',15),Pn=(0,e.Uk)("为了在"),Hn=(0,e._)("code",null,"react",-1),Ln=(0,e.Uk)("模块更新的同时，能保留"),Tn=(0,e._)("code",null,"state",-1),Wn=(0,e.Uk)("等页面中其他状态，我们需要引入"),Bn={href:"https://github.com/gaearon/react-hot-loader",target:"_blank",rel:"noopener noreferrer"},Nn=(0,e.Uk)("react-hot-loader"),Fn=(0,e.Uk)("~"),Mn=(0,e._)("p",null,[(0,e.Uk)("Q:　请问"),(0,e._)("code",null,"webpack-dev-server"),(0,e.Uk)("与"),(0,e._)("code",null,"react-hot-loader"),(0,e.Uk)("两者的热替换有什么区别？")],-1),An=(0,e.Uk)("A: 区别在于"),Dn=(0,e._)("code",null,"webpack-dev-serve",-1),On=(0,e.Uk)("r自己的"),Gn=(0,e._)("code",null,"--hot",-1),zn=(0,e.Uk)("模式只能即时刷新页面，但状态保存不住。因为"),Jn=(0,e._)("code",null,"React",-1),Qn=(0,e.Uk)("有一些自己语法(JSX)是"),$n=(0,e._)("code",null,"HotModuleReplacementPlugin",-1),Kn=(0,e.Uk)("搞不定的。 而"),Xn=(0,e._)("code",null,"react-hot-loader",-1),Yn=(0,e.Uk)("在"),Vn=(0,e._)("code",null,"--hot",-1),Zn=(0,e.Uk)("基础上做了额外的处理，来保证状态可以存下来。（来自"),ns={href:"https://segmentfault.com/q/1010000005612845",target:"_blank",rel:"noopener noreferrer"},ss=(0,e.Uk)("segmentfault"),as=(0,e.Uk)("）"),es=(0,e._)("p",null,[(0,e.Uk)("下面我们来加入"),(0,e._)("code",null,"react-hot-loader v4"),(0,e.Uk)(",")],-1),ps=(0,e._)("p",null,"安装依赖",-1),ts=(0,e._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,e._)("pre",{class:"language-text"},[(0,e._)("code",null,"npm install react-hot-loader --save-dev\n")]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br")])],-1),rs=(0,e.Uk)("根据"),os={href:"https://github.com/gaearon/react-hot-loader#getting-started",target:"_blank",rel:"noopener noreferrer"},ls=(0,e.Uk)("文档"),cs=(0,e.Uk)("， 我们要做如下几个修改~"),us=(0,e.uE)('<ol><li><code>.babelrc</code> 增加 <code>react-hot-loader/babel</code></li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>.babelrc\n{\n  &quot;presets&quot;: [\n    &quot;es2015&quot;,\n    &quot;react&quot;,\n    &quot;stage-0&quot;\n  ],\n  &quot;plugins&quot;: [\n    &quot;react-hot-loader/babel&quot;\n  ]\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ol><li><code>webpack.dev.config.js</code>入口增加<code>react-hot-loader/patch</code></li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>webpack.dev.config.js\n    entry: [\n        &#39;react-hot-loader/patch&#39;,\n        path.join(__dirname, &#39;src/index.js&#39;)\n    ]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol><li><code>src/index.js</code>修改如下</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/index.js\nimport React from &#39;react&#39;;\nimport ReactDom from &#39;react-dom&#39;;\n\nimport getRouter from &#39;./router/router&#39;;\n\nif (module.hot) {\n  module.hot.accept();\n}\nReactDom.render(\n  getRouter(), document.getElementById(&#39;app&#39;));\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>现在，执行<code>npm start</code>，试试。是不是修改页面的时候，<code>state</code>不更新了？</p><ol start="2"><li><p><code>src/Page1/Page1.js</code>修改如下</p><div class="language-JS ext-JS line-numbers-mode"><pre class="language-JS"><code>import React, {Component} from &#39;react&#39;;\nimport { hot } from &#39;react-hot-loader/root&#39;;\n\nclass Home extends Component {\n  render() {\n    return (\n      &lt;div&gt;\n        this is page1~\n      &lt;/div&gt;\n    )\n  }\n}\nexport default hot(Home)\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></li><li><p><code>src/Home/Home.js</code> 修改如下</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> hot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-hot-loader/root&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">class</span> <span class="token class-name">Home</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      count<span class="token operator">:</span> <span class="token number">0</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">_handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      count<span class="token operator">:</span> <span class="token operator">++</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\n        <span class="token keyword">this</span> is home<span class="token operator">~</span><span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">&gt;</span>\n        当前计数：<span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">}</span><span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>自增<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">hot</span><span class="token punctuation">(</span>Home<span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div></li></ol><h3 id="使用-hooks" tabindex="-1"><a class="header-anchor" href="#使用-hooks" aria-hidden="true">#</a> 使用 hooks</h3>',9),is={href:"https://github.com/gaearon/react-hot-loader#hook-support",target:"_blank",rel:"noopener noreferrer"},bs=(0,e.Uk)("文档"),ds=(0,e.uE)('<ol><li><p><code>src/Pages/Hooks/Hooks.js</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> hot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-hot-loader/root&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">useGithub</span> <span class="token operator">=</span> <span class="token parameter">userName</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>user<span class="token punctuation">,</span> setUser<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://api.github.com/users/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>userName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>setUser<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>userName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> user<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token function">useGithub</span><span class="token punctuation">(</span><span class="token string">&#39;weibozzz&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>Loading<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\n      Hello <span class="token operator">&lt;</span>b<span class="token operator">&gt;</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>login<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>bio<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">hot</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div></li><li><p><code>src/router/router.js</code></p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span>BrowserRouter <span class="token keyword">as</span> Router<span class="token punctuation">,</span> Route<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Link<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-router-dom&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">&#39;../pages/Home/Home&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Page1 <span class="token keyword">from</span> <span class="token string">&#39;../pages/Page1/Page1&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Hook <span class="token keyword">from</span> <span class="token string">&#39;../pages/Hooks/Hooks&#39;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">getRouter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Router<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">&quot;/&quot;</span><span class="token operator">&gt;</span>首页<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">&quot;/page1&quot;</span><span class="token operator">&gt;</span>Page1<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">&quot;/hook&quot;</span><span class="token operator">&gt;</span>Hook2<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>Switch<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>Route exact path<span class="token operator">=</span><span class="token string">&quot;/&quot;</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Home<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">&quot;/page1&quot;</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Page1<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">&quot;/hook&quot;</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Hook<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Switch<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Router<span class="token operator">&gt;</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> getRouter<span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><ol start="3"><li><code>webpack.dev.config.js</code> 避免出现黄色警告</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n\t<span class="token operator">...</span>\n  resolve<span class="token operator">:</span> <span class="token punctuation">{</span>\n    alias<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string">&#39;react-dom&#39;</span><span class="token operator">:</span> <span class="token string">&#39;@hot-loader/react-dom&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n <span class="token operator">...</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>https://github.com/gatsbyjs/gatsby/issues/11934</li></ul><p><strong>注意：您不能在类组件中使用 Hooks ，但是您绝对可以在组件树中，将类和函数式组件混合在一起使用。组件是类还是使用Hook的函数是该组件的实现细节</strong> http://react.html.cn/docs/hooks-faq.html</p><h1 id="文件路径优化" tabindex="-1"><a class="header-anchor" href="#文件路径优化" aria-hidden="true">#</a> 文件路径优化</h1><p>做到这里，我们简单休息下。做下优化~</p><p>在之前写的代码中，我们引用组件，或者页面时候，写的是相对路径~</p><p>比如<code>src/router/router.js</code>里面，引用<code>Home.js</code>的时候就用的相对路径</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>import Home from &#39;../pages/Home/Home&#39;;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>webpack提供了一个别名配置，就是我们无论在哪个路径下，引用都可以这样</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>import Home from &#39;pages/Home/Home&#39;;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>下面我们来配置下，修改<code>webpack.dev.config.js</code>，增加别名~</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>webpack.dev.config.js\n    resolve: {\n        alias: {\n            pages: path.join(__dirname, &#39;src/pages&#39;),\n            component: path.join(__dirname, &#39;src/component&#39;),\n            router: path.join(__dirname, &#39;src/router&#39;)\n        }\n    }\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>然后我们把之前使用的绝对路径统统改掉。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/router/router.js\nimport Home from &#39;pages/Home/Home&#39;;\nimport Page1 from &#39;pages/Page1/Page1&#39;;\nsrc/index.js\nimport getRouter from &#39;router/router&#39;;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>我们这里约定，下面，我们会默认配置需要的别名路径，不再做重复的讲述哦。</p><h1 id="redux" tabindex="-1"><a class="header-anchor" href="#redux" aria-hidden="true">#</a> redux</h1><p><code>npm install redux -S</code></p><p>接下来，我们就要就要就要集成<code>redux</code>了。</p>',21),ms=(0,e.Uk)("要对"),ks=(0,e._)("code",null,"redux",-1),gs=(0,e.Uk)("有一个大概的认识，可以阅读阮一峰前辈的"),vs={href:"http://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html",target:"_blank",rel:"noopener noreferrer"},xs=(0,e.Uk)("Redux 入门教程（一）：基本用法"),hs=(0,e.Uk)("如果要对"),fs=(0,e._)("code",null,"redux",-1),ws=(0,e.Uk)("有一个非常详细的认识，我推荐阅读"),_s={href:"http://cn.redux.js.org/index.html",target:"_blank",rel:"noopener noreferrer"},qs=(0,e.Uk)("中文文档"),Rs=(0,e.Uk)("，写的非常好。读了这个教程，有一个非常深刻的感觉，"),js=(0,e._)("code",null,"redux",-1),Us=(0,e.Uk)("并没有任何魔法。"),ys=(0,e.uE)('<p><strong>不要被各种关于 reducers, middleware, store 的演讲所蒙蔽 ---- Redux 实际是非常简单的。</strong></p><p>当然，我这篇文章是写给新手的，如果看不懂上面的文章，或者不想看，没关系。先会用，多用用就知道原理了。</p><p>开始整代码！我们就做一个最简单的计数器。自增，自减，重置。</p><p>先安装<code>redux</code> <code>npm install --save redux</code></p><p>初始化目录结构</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd src\nmkdir redux\ncd redux\nmkdir actions\nmkdir reducers\ntouch reducers.js\ntouch store.js\ntouch actions/counter.js\ntouch reducers/counter.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>先来写<code>action</code>创建函数。<strong>通过action创建函数，可以创建action~</strong><code>src/redux/actions/counter.js</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>/*action*/\n\nexport const INCREMENT = &quot;counter/INCREMENT&quot;;\nexport const DECREMENT = &quot;counter/DECREMENT&quot;;\nexport const RESET = &quot;counter/RESET&quot;;\n\nexport function increment() {\n    return {type: INCREMENT}\n}\n\nexport function decrement() {\n    return {type: DECREMENT}\n}\n\nexport function reset() {\n    return {type: RESET}\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>再来写<code>reducer</code>,<strong>reducer是一个纯函数，接收action和旧的state,生成新的state.</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/redux/reducers/counter.js\nimport {INCREMENT, DECREMENT, RESET} from &#39;../actions/counter&#39;;\n\n/*\n* 初始化state\n */\n\nconst initState = {\n    count: 0\n};\n/*\n* reducer\n */\nexport default function reducer(state = initState, action) {\n    switch (action.type) {\n        case INCREMENT:\n            return {\n                count: state.count + 1\n            };\n        case DECREMENT:\n            return {\n                count: state.count - 1\n            };\n        case RESET:\n            return {count: 0};\n        default:\n            return state\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>一个项目有很多的<code>reducers</code>,我们要把他们整合到一起</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/redux/reducers.js\nimport counter from &#39;./reducers/counter&#39;;\n\nexport default function combineReducers(state = {}, action) {\n    return {\n        counter: counter(state.counter, action)\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>到这里，我们必须再理解下一句话。</p><p><strong>reducer就是纯函数，接收state 和 action，然后返回一个新的 state。</strong></p><p>看看上面的代码，无论是<code>combineReducers</code>函数也好，还是<code>reducer</code>函数也好，都是接收<code>state</code>和<code>action</code>， 返回更新后的<code>state</code>。区别就是<code>combineReducers</code>函数是处理整棵树，<code>reducer</code>函数是处理树的某一点。</p><p>接下来，我们要创建一个<code>store</code>。</p><p>前面我们可以使用 <code>action</code> 来描述“发生了什么”，使用<code>action</code>创建函数来返回<code>action</code>。</p><p>还可以使用 <code>reducers</code> 来根据 <code>action</code> 更新 <code>state</code> 。</p><p>那我们如何提交<code>action</code>？提交的时候，怎么才能触发<code>reducers</code>呢？</p><p><code>store</code> 就是把它们联系到一起的对象。<code>store</code> 有以下职责：</p><ul><li>维持应用的 <code>state</code>；</li><li>提供 <code>getState()</code> 方法获取 <code>state</code>；</li><li>提供 <code>dispatch(action)</code> 触发<code>reducers</code>方法更新 <code>state</code>；</li><li>通过<code> subscribe(listener)</code> 注册监听器;</li><li>通过 <code>subscribe(listener)</code> 返回的函数注销监听器。</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/redux/store.js\nimport {createStore} from &#39;redux&#39;;\nimport combineReducers from &#39;./reducers.js&#39;;\n\nlet store = createStore(combineReducers);\n\nexport default store;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>到现在为止，我们已经可以使用<code>redux</code>了~</p><p>下面我们就简单的测试下</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd src\ncd redux\ntouch testRedux.js\nsrc/redux/testRedux.js\nimport {increment, decrement, reset} from &#39;./actions/counter&#39;;\n\nimport store from &#39;./store&#39;;\n\n// 打印初始状态\nconsole.log(store.getState());\n\n// 每次 state 更新时，打印日志\n// 注意 subscribe() 返回一个函数用来注销监听器\nlet unsubscribe = store.subscribe(() =&gt;\n    console.log(store.getState())\n);\n\n// 发起一系列 action\nstore.dispatch(increment());\nstore.dispatch(decrement());\nstore.dispatch(reset());\n\n// 停止监听 state 更新\nunsubscribe();\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>当前文件夹执行命令</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>webpack testRedux.js \n\nnode dist/main.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>是不是看到输出了<code>state</code>变化？</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{ counter: { count: 0 } }\n{ counter: { count: 1 } }\n{ counter: { count: 0 } }\n{ counter: { count: 0 } }\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>做这个测试，就是为了告诉大家，<code>redux</code>和<code>react</code>没关系，虽说他俩能合作。</p>',30),Es=(0,e.Uk)("到这里，我建议你再理下"),Is=(0,e._)("code",null,"redux",-1),Cs=(0,e.Uk)("的数据流，看看"),Ss={href:"http://cn.redux.js.org/docs/basics/DataFlow.html",target:"_blank",rel:"noopener noreferrer"},Ps=(0,e.Uk)("这里"),Hs=(0,e.Uk)("。"),Ls=(0,e.uE)('<ol><li>调用<code>store.dispatch(action)</code>提交<code>action</code>。</li><li><code>redux store</code>调用传入的<code>reducer</code>函数。把当前的<code>state</code>和<code>action</code>传进去。</li><li>根 <code>reducer</code> 应该把多个子 <code>reducer</code> 输出合并成一个单一的 <code>state</code> 树。</li><li><code>Redux store</code> 保存了根 <code>reducer</code> 返回的完整 <code>state</code> 树。</li></ol><p>就是酱紫~~</p><p>这会<code>webpack.dev.config.js</code>路径别名增加一下，后面好写了。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>webpack.dev.config.js\n          alias: {\n              ...\n              actions: path.join(__dirname, &#39;src/redux/actions&#39;),\n              reducers: path.join(__dirname, &#39;src/redux/reducers&#39;)\n          }\n  \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>把前面的相对路径都改改。</p><h3 id="react-redux" tabindex="-1"><a class="header-anchor" href="#react-redux" aria-hidden="true">#</a> react-redux</h3><p><code>npm install --save react-redux</code></p><p>下面我们开始搭配<code>react</code>使用。</p><p>写一个<code>Counter</code>页面</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd src/pages\nmkdir Counter\ntouch Counter/Counter.js\nsrc/pages/Counter/Counter.js\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Counter</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\n                <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token function">当前计数为</span><span class="token punctuation">(</span>显示redux计数<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n                <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;调用自增函数&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>自增\n                <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\n                <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;调用自减函数&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>自减\n                <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\n                <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;调用重置函数&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>重置\n                <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\n            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n        <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>修改路由，增加<code>Counter</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// src/router/router.js\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span>BrowserRouter <span class="token keyword">as</span> Router<span class="token punctuation">,</span> Route<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Link<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-router-dom&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">&#39;../pages/Home/Home&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Page1 <span class="token keyword">from</span> <span class="token string">&#39;../pages/Page1/Page1&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Hook <span class="token keyword">from</span> <span class="token string">&#39;../pages/Hooks/Hooks&#39;</span>\n<span class="token keyword">import</span> Counter <span class="token keyword">from</span> <span class="token string">&#39;pages/Counter/Counter&#39;</span><span class="token punctuation">;</span>\n\n\n<span class="token keyword">const</span> <span class="token function-variable function">getRouter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n  <span class="token operator">&lt;</span>Router<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">&quot;/&quot;</span><span class="token operator">&gt;</span>首页<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">&quot;/page1&quot;</span><span class="token operator">&gt;</span>Page1<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">&quot;/hook&quot;</span><span class="token operator">&gt;</span>Hook2<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">&quot;/counter&quot;</span><span class="token operator">&gt;</span>Counter<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span>Switch<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>Route exact path<span class="token operator">=</span><span class="token string">&quot;/&quot;</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Home<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">&quot;/page1&quot;</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Page1<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">&quot;/hook&quot;</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Hook<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">&quot;/counter&quot;</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Counter<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>Switch<span class="token operator">&gt;</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>Router<span class="token operator">&gt;</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> getRouter<span class="token punctuation">;</span>\n\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>npm start`看看效果。</p><p>下一步，我们让<code>Counter</code>组件和<code>Redux</code>联合起来。使<code>Counter</code>能获得到<code>Redux</code>的<code>state</code>，并且能发射<code>action</code>。</p><p>当然我们可以使用刚才测试<code>testRedux</code>的方法，手动监听~手动引入<code>store</code>~但是这肯定很麻烦哦。</p><p><code>react-redux</code>提供了一个方法<code>connect</code>。</p><blockquote><p>容器组件就是使用 store.subscribe() 从 Redux state 树中读取部分数据，并通过 props 来把这些数据提供给要渲染的组件。你可以手工来开发容器组件，但建议使用 React Redux 库的 connect() 方法来生成，这个方法做了性能优化来避免很多不必要的重复渲染。</p></blockquote><p><code>connect</code>接收两个参数，一个<code>mapStateToProps</code>,就是把<code>redux</code>的<code>state</code>，转为组件的<code>Props</code>，还有一个参数是<code>mapDispatchToprops</code>, 就是把发射<code>actions</code>的方法，转为<code>Props</code>属性函数。</p><p>先来安装<code>react-redux</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// src/pages/Counter/Counter.js</span>\n<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>Component<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>increment<span class="token punctuation">,</span> decrement<span class="token punctuation">,</span> reset<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;actions/counter&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>connect<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-redux&#39;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Counter</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token function">当前计数为</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>counter<span class="token punctuation">.</span>count<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>increment<span class="token punctuation">}</span><span class="token operator">&gt;</span>自增\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>decrement<span class="token punctuation">}</span><span class="token operator">&gt;</span>自减\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\n        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>reset<span class="token punctuation">}</span><span class="token operator">&gt;</span>重置\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> <span class="token function-variable function">mapStateToProps</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    counter<span class="token operator">:</span> state<span class="token punctuation">.</span>counter\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">mapDispatchToProps</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dispatch</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">increment</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">decrement</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">decrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">reset</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">connect</span><span class="token punctuation">(</span>mapStateToProps<span class="token punctuation">,</span> mapDispatchToProps<span class="token punctuation">)</span><span class="token punctuation">(</span>Counter<span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>下面我们要传入<code>store</code></p><blockquote><p>所有容器组件都可以访问 Redux store，所以可以手动监听它。一种方式是把它以 props 的形式传入到所有容器组件中。但这太麻烦了，因为必须要用 store 把展示组件包裹一层，仅仅是因为恰好在组件树中渲染了一个容器组件。</p></blockquote><blockquote><p>建议的方式是使用指定的 React Redux 组件 来 魔法般的 让所有容器组件都可以访问 store，而不必显示地传递它。只需要在渲染根组件时使用即可。</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// src/index.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> ReactDom <span class="token keyword">from</span> <span class="token string">&#39;react-dom&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Provider<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-redux&#39;</span>\n<span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">&#39;./redux/store&#39;</span>\n\n<span class="token keyword">import</span> getRouter <span class="token keyword">from</span> <span class="token string">&#39;./router/router&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span>module<span class="token punctuation">.</span>hot<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">.</span>hot<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token function">renderWithHotReload</span><span class="token punctuation">(</span><span class="token function">getRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">function</span> <span class="token function">renderWithHotReload</span><span class="token punctuation">(</span><span class="token parameter">RootElement</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  ReactDom<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>Provider store<span class="token operator">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span><span class="token operator">&gt;</span>\n      <span class="token punctuation">{</span>RootElement<span class="token punctuation">}</span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>Provider<span class="token operator">&gt;</span><span class="token punctuation">,</span>\n    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;app&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>到这里我们就可以执行<code>npm start</code>，打开localhost:8080/counter看效果了。</p>',28),Ts=(0,e.Uk)("这里我们再缕下（可以读"),Ws={href:"http://taobaofed.org/blog/2016/08/18/react-redux-connect/",target:"_blank",rel:"noopener noreferrer"},Bs=(0,e.Uk)("React 实践心得：react-redux 之 connect 方法详解"),Ns=(0,e.Uk)("）"),Fs=(0,e.uE)('<ol><li><code>Provider</code>组件是让所有的组件可以访问到<code>store</code>。不用手动去传。也不用手动去监听。</li><li><code>connect</code>函数作用是从 <code>Redux state</code> 树中读取部分数据，并通过 props 来把这些数据提供给要渲染的组件。也传递<code>dispatch(action)</code>函数到<code>props</code>。</li></ol><p>接下来，我们要说异步<code>action</code></p><p>参考地址： http://cn.redux.js.org/docs/advanced/AsyncActions.html</p><p>想象一下我们调用一个异步<code>get</code>请求去后台请求数据：</p><ol><li>请求开始的时候，界面转圈提示正在加载。<code>isLoading</code>置为<code>true</code>。</li><li>请求成功，显示数据。<code>isLoading</code>置为<code>false</code>,<code>data</code>填充数据。</li><li>请求失败，显示失败。<code>isLoading</code>置为<code>false</code>，显示错误信息。</li></ol><p>下面，我们以向后台请求用户基本信息为例。</p><ol><li>我们先创建一个<code>user.json</code>，等会请求用，相当于后台的API接口。</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd dist\nmkdir api\ncd api\ntouch user.json\ndist/api/user.json\n{\n  &quot;name&quot;: &quot;brickspert&quot;,\n  &quot;intro&quot;: &quot;please give me a star&quot;\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ol><li>创建必须的<code>action</code>创建函数。</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd src/redux/actions\ntouch userInfo.js\nsrc/redux/actions/userInfo.js\nexport const GET_USER_INFO_REQUEST = &quot;userInfo/GET_USER_INFO_REQUEST&quot;;\nexport const GET_USER_INFO_SUCCESS = &quot;userInfo/GET_USER_INFO_SUCCESS&quot;;\nexport const GET_USER_INFO_FAIL = &quot;userInfo/GET_USER_INFO_FAIL&quot;;\n\nfunction getUserInfoRequest() {\n    return {\n        type: GET_USER_INFO_REQUEST\n    }\n}\n\nfunction getUserInfoSuccess(userInfo) {\n    return {\n        type: GET_USER_INFO_SUCCESS,\n        userInfo: userInfo\n    }\n}\n\nfunction getUserInfoFail() {\n    return {\n        type: GET_USER_INFO_FAIL\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>我们创建了请求中，请求成功，请求失败三个<code>action</code>创建函数。</p><ol><li>创建<code>reducer</code></li></ol><p>再强调下，<code>reducer</code>是根据<code>state</code>和<code>action</code>生成新<code>state</code>的<strong>纯函数</strong>。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd src/redux/reducers\ntouch userInfo.js\nsrc/redux/reducers/userInfo.js\nimport {GET_USER_INFO_REQUEST, GET_USER_INFO_SUCCESS, GET_USER_INFO_FAIL} from &#39;actions/userInfo&#39;;\n\n\nconst initState = {\n    isLoading: false,\n    userInfo: {},\n    errorMsg: &#39;&#39;\n};\n\nexport default function reducer(state = initState, action) {\n    switch (action.type) {\n        case GET_USER_INFO_REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n                userInfo: {},\n                errorMsg: &#39;&#39;\n            };\n        case GET_USER_INFO_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                userInfo: action.userInfo,\n                errorMsg: &#39;&#39;\n            };\n        case GET_USER_INFO_FAIL:\n            return {\n                ...state,\n                isLoading: false,\n                userInfo: {},\n                errorMsg: &#39;请求错误&#39;\n            };\n        default:\n            return state;\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><p><strong>这里的...state语法，是和别人的Object.assign()起同一个作用，合并新旧state。我们这里是没效果的，但是我建议都写上这个哦</strong></p><p>组合<code>reducer</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/redux/reducers.js\nimport counter from &#39;reducers/counter&#39;;\nimport userInfo from &#39;reducers/userInfo&#39;;\n\nexport default function combineReducers(state = {}, action) {\n    return {\n        counter: counter(state.counter, action),\n        userInfo: userInfo(state.userInfo, action)\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ol><li><p>现在有了</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>action\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>，有了</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>reducer\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>，我们就需要调用把</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>action\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>里面的三个</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>action\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>函数和网络请求结合起来。</p><ul><li>请求中 <code>dispatch getUserInfoRequest</code></li><li>请求成功 <code>dispatch getUserInfoSuccess</code></li><li>请求失败 <code>dispatch getUserInfoFail</code></li></ul></li></ol><p><code>src/redux/actions/userInfo.js</code>增加</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>export function getUserInfo() {\n    return function (dispatch) {\n        dispatch(getUserInfoRequest());\n\n        return fetch(&#39;http://localhost:8080/api/user.json&#39;)\n            .then((response =&gt; {\n                return response.json()\n            }))\n            .then((json) =&gt; {\n                    dispatch(getUserInfoSuccess(json))\n                }\n            ).catch(\n                () =&gt; {\n                    dispatch(getUserInfoFail());\n                }\n            )\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>我们这里发现，别的<code>action</code>创建函数都是返回<code>action</code>对象：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{type: xxxx}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>但是我们现在的这个<code>action</code>创建函数 <code>getUserInfo</code>则是返回函数了。</p><p>为了让<code>action</code>创建函数除了返回<code>action</code>对象外，还可以返回函数，我们需要引用<code>redux-thunk</code>。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm install --save redux-thunk\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',25),Ms=(0,e.Uk)("这里涉及到"),As=(0,e._)("code",null,"redux",-1),Ds=(0,e.Uk)("中间件"),Os=(0,e._)("code",null,"middleware",-1),Gs=(0,e.Uk)("，我后面会讲到的。你也可以读这里"),zs={href:"http://cn.redux.js.org/docs/advanced/Middleware.html",target:"_blank",rel:"noopener noreferrer"},Js=(0,e.Uk)("Middleware"),Qs=(0,e.Uk)("。"),$s=(0,e.uE)('<p>简单的说，中间件就是<code>action</code>在到达<code>reducer</code>，先经过中间件处理。我们之前知道<code>reducer</code>能处理的<code>action</code>只有这样的<code>{type:xxx}</code>，所以我们使用中间件来处理 函数形式的<code>action</code>，把他们转为标准的<code>action</code>给<code>reducer</code>。这是<code>redux-thunk</code>的作用。 使用<code>redux-thunk</code>中间件</p><p>我们来引入<code>redux-thunk</code>中间件</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/redux/store.js\nimport {createStore, applyMiddleware} from &#39;redux&#39;;\nimport thunkMiddleware from &#39;redux-thunk&#39;;\nimport combineReducers from &#39;./reducers.js&#39;;\n\nlet store = createStore(combineReducers, applyMiddleware(thunkMiddleware));\n\nexport default store;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>到这里，<code>redux</code>这边OK了，我们来写个组件验证下。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd src/pages\nmkdir UserInfo\ncd UserInfo\ntouch UserInfo.js\nsrc/pages/UserInfo/UserInfo.js\nimport React, {Component} from &#39;react&#39;;\nimport {connect} from &#39;react-redux&#39;;\nimport {getUserInfo} from &quot;actions/userInfo&quot;;\n\nclass UserInfo extends Component {\n\n    render() {\n        const {userInfo, isLoading, errorMsg} = this.props.userInfo;\n        return (\n            &lt;div&gt;\n                {\n                    isLoading ? &#39;请求信息中......&#39; :\n                        (\n                            errorMsg ? errorMsg :\n                                &lt;div&gt;\n                                    &lt;p&gt;用户信息：&lt;/p&gt;\n                                    &lt;p&gt;用户名：{userInfo.name}&lt;/p&gt;\n                                    &lt;p&gt;介绍：{userInfo.intro}&lt;/p&gt;\n                                &lt;/div&gt;\n                        )\n                }\n                &lt;button onClick={() =&gt; this.props.getUserInfo()}&gt;请求用户信息&lt;/button&gt;\n            &lt;/div&gt;\n        )\n    }\n}\n\nexport default connect((state) =&gt; ({userInfo: state.userInfo}), {getUserInfo})(UserInfo);\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>这里你可能发现<code>connect</code>参数写法不一样了，<code>mapStateToProps</code>函数用了<code>es6</code>简写，<code>mapDispatchToProps</code>用了<code>react-redux</code>提供的简单写法。</p><p>增加路由 <code>src/router/router.js</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>import React from &#39;react&#39;;\n\nimport {BrowserRouter as Router, Route, Switch, Link} from &#39;react-router-dom&#39;;\nimport Home from &#39;../pages/Home/Home&#39;;\nimport Page1 from &#39;../pages/Page1/Page1&#39;;\nimport Hook from &#39;../pages/Hooks/Hooks&#39;\nimport UserInfo from &#39;pages/UserInfo/UserInfo&#39;;\nimport Counter from &#39;pages/Counter/Counter&#39;;\n\n\nconst getRouter = () =&gt; (\n  &lt;Router&gt;\n    &lt;div&gt;\n      &lt;ul&gt;\n        &lt;li&gt;&lt;Link to=&quot;/&quot;&gt;首页&lt;/Link&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;Link to=&quot;/page1&quot;&gt;Page1&lt;/Link&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;Link to=&quot;/hook&quot;&gt;Hook2&lt;/Link&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;Link to=&quot;/counter&quot;&gt;Counter&lt;/Link&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;Link to=&quot;/userInfo&quot;&gt;UserInfo&lt;/Link&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n      &lt;Switch&gt;\n        &lt;Route exact path=&quot;/&quot; component={Home}/&gt;\n        &lt;Route path=&quot;/page1&quot; component={Page1}/&gt;\n        &lt;Route path=&quot;/hook&quot; component={Hook}/&gt;\n        &lt;Route path=&quot;/counter&quot; component={Counter}/&gt;\n        &lt;Route path=&quot;/userInfo&quot; component={UserInfo}/&gt;\n      &lt;/Switch&gt;\n    &lt;/div&gt;\n  &lt;/Router&gt;\n);\n\nexport default getRouter;\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>现在你可以执行<code>npm start</code>去看效果啦！</p><p>到这里<code>redux</code>集成基本告一段落了，后面我们还会有一些优化。</p><h2 id="combinreducers优化" tabindex="-1"><a class="header-anchor" href="#combinreducers优化" aria-hidden="true">#</a> combinReducers优化</h2><p><code>redux</code>提供了一个<code>combineReducers</code>函数来合并<code>reducer</code>，不用我们自己合并哦。写起来简单，但是意思和我们 自己写的<code>combinReducers</code>也是一样的。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/redux/reducers.js\nimport {combineReducers} from &quot;redux&quot;;\n\nimport counter from &#39;reducers/counter&#39;;\nimport userInfo from &#39;reducers/userInfo&#39;;\n\n\nexport default combineReducers({\n    counter,\n    userInfo\n});\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h1 id="devtool优化" tabindex="-1"><a class="header-anchor" href="#devtool优化" aria-hidden="true">#</a> devtool优化</h1><p>现在我们发现一个问题，代码哪里写错了，浏览器报错只报在<code>build.js</code>第几行。</p>',15),Ks=(0,e.Uk)("这让我们分析错误无从下手。看"),Xs={href:"https://doc.webpack-china.org/configuration/devtool",target:"_blank",rel:"noopener noreferrer"},Ys=(0,e.Uk)("这里"),Vs=(0,e.Uk)("。"),Zs=(0,e.uE)('<p>我们增加<code>webpack</code>配置<code>devtool</code>！</p><p><code>webpack.dev.config.js</code>增加</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>devtool: &#39;inline-source-map&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h1 id="编译css" tabindex="-1"><a class="header-anchor" href="#编译css" aria-hidden="true">#</a> 编译css</h1><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm install css-loader style-loader --save-dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>css-loader</code>使你能够使用类似<code>@import</code> 和 <code>url(...)</code>的方法实现 <code>require()</code>的功能；</p><p><code>style-loader</code>将所有的计算后的样式加入页面中； 二者组合在一起使你能够把样式表嵌入<code>webpack</code>打包后的JS文件中。</p><p><code>webpack.dev.config.js</code> <code>rules</code>增加</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{\n   test: /\\.css$/,\n   use: [&#39;style-loader&#39;, &#39;css-loader&#39;]\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>我们用<code>Page1</code>页面来测试下</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd src/pages/Page1\ntouch Page1.css\nsrc/pages/Page1/Page1.css\n.page-box {\n    border: 1px solid red;\n}\nsrc/pages/Page1/Page1.js\nimport React, {Component} from &#39;react&#39;;\n\nimport &#39;./Page1.css&#39;;\n\nexport default class Page1 extends Component {\n    render() {\n        return (\n            &lt;div className=&quot;page-box&quot;&gt;\n                this is page1~\n            &lt;/div&gt;\n        )\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>好了，现在<code>npm start</code>去看效果吧。</p><h1 id="编译less" tabindex="-1"><a class="header-anchor" href="#编译less" aria-hidden="true">#</a> 编译less</h1>',13),na={href:"https://webpack.docschina.org/loaders/less-loader/#%E8%A6%81%E6%B1%82",target:"_blank",rel:"noopener noreferrer"},sa=(0,e.Uk)("https://webpack.docschina.org/loaders/less-loader/#%E8%A6%81%E6%B1%82"),aa=(0,e.Uk)("先说这里为什么不用"),ea=(0,e._)("code",null,"scss",-1),pa=(0,e.Uk)("，因为"),ta=(0,e._)("code",null,"Windows",-1),ra=(0,e.Uk)("使用"),oa=(0,e._)("code",null,"node-sass",-1),la=(0,e.Uk)("，需要先安装"),ca={href:"https://www.microsoft.com/en-us/download/details.aspx?id=8279",target:"_blank",rel:"noopener noreferrer"},ua=(0,e.Uk)(" Microsoft Windows SDK for Windows 7 and .NET Framework 4"),ia=(0,e.Uk)("。 我怕有些人copy这份代码后，没注意，运行不起来。所以这里不用"),ba=(0,e._)("code",null,"scss",-1),da=(0,e.Uk)("了，如果需要，自行编译哦。"),ma=(0,e.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm install less less-loader --save-dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>css-loader</code>使你能够使用类似<code>@import</code> 和 <code>url(...)</code>的方法实现 <code>require()</code>的功能；</p><p><code>style-loader</code>将所有的计算后的样式加入页面中； 二者组合在一起使你能够把样式表嵌入<code>webpack</code>打包后的JS文件中。</p><p><code>webpack.dev.config.js</code> <code>rules</code>增加</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{\n   test: /\\.less$/,\n   use: [&#39;style-loader&#39;, &#39;css-loader&#39;, &#39;less-loader&#39;]\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>我们用<code>Page1</code>页面来测试下</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd src/pages/Page1\ntouch Page1.css\nsrc/pages/Page1/Page1.less\n.page-box {\n    border: 1px solid green;\n}\nsrc/pages/Page1/Page1.js\nimport React, {Component} from &#39;react&#39;;\n\nimport &#39;./Page1.css&#39;;\n\nexport default class Page1 extends Component {\n    render() {\n        return (\n            &lt;div className=&quot;page-box&quot;&gt;\n                this is page1~\n            &lt;/div&gt;\n        )\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>好了，现在<code>npm start</code>去看效果吧。</p><h1 id="编译图片" tabindex="-1"><a class="header-anchor" href="#编译图片" aria-hidden="true">#</a> 编译图片</h1><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm install --save-dev url-loader file-loader\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>webpack.dev.config.js</code> <code>rules</code>增加</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{\n    test: /\\.(png|jpg|jpeg|gif)$/,\n    use: [{\n        loader: &#39;url-loader&#39;,\n        options: {\n            limit: 8192\n        }\n    }]\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><code>options limit 8192</code>意思是，小于等于8K的图片会被转成<code>base64</code>编码，直接插入HTML中，减少<code>HTTP</code>请求。</p><p>我们来用<code>Page1</code> 测试下</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd src/pages/Page1\nmkdir images\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>给<code>images</code>文件夹放一个图片。</p><p>修改代码，引用图片</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/pages/Page1/Page1.js\nimport React, {Component} from &#39;react&#39;;\n\nimport &#39;./Page1.css&#39;;\n\nimport image from &#39;./images/weibozzz.jpeg&#39;;\n\nexport default class Page1 extends Component {\n    render() {\n        return (\n            &lt;div className=&quot;page-box&quot;&gt;\n                this is page1~\n                &lt;img src={image}/&gt;\n            &lt;/div&gt;\n        )\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>可以去看看效果啦。</p><h1 id="按需加载" tabindex="-1"><a class="header-anchor" href="#按需加载" aria-hidden="true">#</a> 按需加载</h1><p>为什么要实现按需加载？</p><p>我们现在看到，打包完后，所有页面只生成了一个<code>build.js</code>,当我们首屏加载的时候，就会很慢。因为他也下载了别的页面的<code>js</code>了哦。</p><p>如果每个页面都打包了自己单独的JS，在进入自己页面的时候才加载对应的js，那首屏加载就会快很多哦。</p><p>在 <code>react-router 2.0</code>时代， 按需加载需要用到的最关键的一个函数，就是<code>require.ensure()</code>，它是按需加载能够实现的核心。</p><p>在4.0版本，官方放弃了这种处理按需加载的方式，选择了一个更加简洁的处理方式。</p>',25),ka={href:"https://reacttraining.com/react-router/web/guides/code-splitting",target:"_blank",rel:"noopener noreferrer"},ga=(0,e.Uk)("传送门"),va=(0,e.uE)('<p>根据官方示例，我们开搞</p><ol><li><code>npm install bundle-loader --save-dev</code></li><li>新建<code>bundle.js</code></li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd src/router\ntouch Bundle.js\nsrc/router/Bundle.js\nimport React, {Component} from &#39;react&#39;\n\nclass Bundle extends Component {\n    state = {\n        // short for &quot;module&quot; but that&#39;s a keyword in js, so &quot;mod&quot;\n        mod: null\n    };\n\n    componentWillMount() {\n        this.load(this.props)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.load !== this.props.load) {\n            this.load(nextProps)\n        }\n    }\n\n    load(props) {\n        this.setState({\n            mod: null\n        });\n        props.load((mod) =&gt; {\n            this.setState({\n                // handle both es imports and cjs\n                mod: mod.default ? mod.default : mod\n            })\n        })\n    }\n\n    render() {\n        return this.props.children(this.state.mod)\n    }\n}\n\nexport default Bundle;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><ol><li>改造路由器</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>src/router/router.js\nimport React from &#39;react&#39;;\n\nimport {BrowserRouter as Router, Route, Switch, Link} from &#39;react-router-dom&#39;;\n\nimport Bundle from &#39;./Bundle&#39;;\n\nimport Home from &#39;bundle-loader?lazy&amp;name=home!pages/Home/Home&#39;;\nimport Page1 from &#39;bundle-loader?lazy&amp;name=page1!pages/Page1/Page1&#39;;\nimport Counter from &#39;bundle-loader?lazy&amp;name=counter!pages/Counter/Counter&#39;;\nimport UserInfo from &#39;bundle-loader?lazy&amp;name=userInfo!pages/UserInfo/UserInfo&#39;;\n\nconst Loading = function () {\n    return &lt;div&gt;Loading...&lt;/div&gt;\n};\n\nconst createComponent = (component) =&gt; (props) =&gt; (\n    &lt;Bundle load={component}&gt;\n        {\n            (Component) =&gt; Component ? &lt;Component {...props} /&gt; : &lt;Loading/&gt;\n        }\n    &lt;/Bundle&gt;\n);\n\nconst getRouter = () =&gt; (\n    &lt;Router&gt;\n        &lt;div&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;Link to=&quot;/&quot;&gt;首页&lt;/Link&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;Link to=&quot;/page1&quot;&gt;Page1&lt;/Link&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;Link to=&quot;/counter&quot;&gt;Counter&lt;/Link&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;Link to=&quot;/userinfo&quot;&gt;UserInfo&lt;/Link&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;Switch&gt;\n                &lt;Route exact path=&quot;/&quot; component={createComponent(Home)}/&gt;\n                &lt;Route path=&quot;/page1&quot; component={createComponent(Page1)}/&gt;\n                &lt;Route path=&quot;/counter&quot; component={createComponent(Counter)}/&gt;\n                &lt;Route path=&quot;/userinfo&quot; component={createComponent(UserInfo)}/&gt;\n            &lt;/Switch&gt;\n        &lt;/div&gt;\n    &lt;/Router&gt;\n);\n\nexport default getRouter;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><p>现在你可以<code>npm start</code>，打开浏览器，看是不是进入新的页面，都会加载自己的JS的~</p><p>但是你可能发现，名字都是<code>0.bundle.js</code>这样子的，这分不清楚是哪个页面的<code>js</code>呀！</p><p>我们修改下<code>webpack.dev.config.js</code>,加个<code>chunkFilename</code>。<code>chunkFilename</code>是除了<code>entry</code>定义的入口<code>js</code>之外的<code>js</code>~</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    output: {\n        path: path.join(__dirname, &#39;./dist&#39;),\n        filename: &#39;bundle.js&#39;,\n        chunkFilename: &#39;[name].js&#39;\n    }\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>现在你运行发现名字变成<code>home.js</code>,这样的了。棒棒哒！</p><p>那么问题来了<code>home</code>是在哪里设置的？<code>webpack</code>怎么知道他叫<code>home</code>？</p><p>其实在这里我们定义了，<code>router.js</code>里面</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>import Home from &#39;bundle-loader?lazy&amp;name=home!pages/Home/Home&#39;;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>看到没。这里有个<code>name=home</code>。嘿嘿。</p><p>**报错： Support for the experimental syntax &#39;classProperties&#39; isn&#39;t currently enabled **</p><p><strong>解决： https://github.com/babel/babel/issues/8655</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// .babelrc 增加此插件\n&quot;plugins&quot;: [\n      &quot;@babel/plugin-proposal-class-properties&quot;\n    ]\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>参考地址：</p><ol><li>http://www.jianshu.com/p/8dd98a7028e0</li><li>https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/docs/guides/code-splitting.md</li><li>https://segmentfault.com/a/1190000007949841</li><li>http://react-china.org/t/webpack-react-router/10123</li><li>https://juejin.im/post/58f9717e44d9040069d06cd6</li></ol><h1 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h1>',20),xa=(0,e.Uk)("其他的配置就相对简单，可参考这个 "),ha={href:"https://github.com/brickspert/blog/issues/1",target:"_blank",rel:"noopener noreferrer"},fa=(0,e.Uk)("从零搭建React全家桶框架教程"),wa=(0,e.Uk)("，或者看最新 "),_a={href:"https://github.com/Weibozzz/webpack-demos",target:"_blank",rel:"noopener noreferrer"},qa=(0,e.Uk)("webpack配置"),Ra={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,t,(0,e._)("p",null,[r,(0,e._)("a",o,[l,(0,e.Wm)(a)])]),c,(0,e._)("ol",null,[(0,e._)("li",null,[u,i,b,(0,e._)("p",null,[d,m,k,g,v,(0,e._)("a",x,[h,(0,e.Wm)(a)])])]),(0,e._)("li",null,[(0,e._)("p",null,[f,(0,e._)("a",w,[_,(0,e.Wm)(a)]),q]),R]),j,(0,e._)("li",null,[U,(0,e._)("p",null,[(0,e._)("a",y,[E,(0,e.Wm)(a)])]),I,C])]),S,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",P,[H,(0,e.Wm)(a)]),L]),(0,e._)("li",null,[(0,e._)("a",T,[W,(0,e.Wm)(a)]),B]),(0,e._)("li",null,[(0,e._)("a",N,[F,(0,e.Wm)(a)]),M]),(0,e._)("li",null,[(0,e._)("a",A,[D,(0,e.Wm)(a)]),O])]),G,(0,e._)("p",null,[z,J,(0,e._)("a",Q,[$,(0,e.Wm)(a)]),K,X,Y,V,Z,nn,sn]),an,(0,e._)("p",null,[en,(0,e._)("a",pn,[tn,(0,e.Wm)(a)]),rn,on,ln,cn,un,bn,dn]),mn,(0,e._)("p",null,[kn,gn,vn,(0,e._)("a",xn,[hn,(0,e.Wm)(a)]),fn]),wn,(0,e._)("p",null,[_n,(0,e._)("a",qn,[Rn,(0,e.Wm)(a)]),jn]),Un,(0,e._)("p",null,[yn,(0,e._)("a",En,[In,(0,e.Wm)(a)]),Cn]),Sn,(0,e._)("p",null,[Pn,Hn,Ln,Tn,Wn,(0,e._)("a",Bn,[Nn,(0,e.Wm)(a)]),Fn]),Mn,(0,e._)("p",null,[An,Dn,On,Gn,zn,Jn,Qn,$n,Kn,Xn,Yn,Vn,Zn,(0,e._)("a",ns,[ss,(0,e.Wm)(a)]),as]),es,ps,ts,(0,e._)("p",null,[rs,(0,e._)("a",os,[ls,(0,e.Wm)(a)]),cs]),us,(0,e._)("p",null,[(0,e._)("a",is,[bs,(0,e.Wm)(a)])]),ds,(0,e._)("p",null,[ms,ks,gs,(0,e._)("a",vs,[xs,(0,e.Wm)(a)])]),(0,e._)("p",null,[hs,fs,ws,(0,e._)("a",_s,[qs,(0,e.Wm)(a)]),Rs,js,Us]),ys,(0,e._)("p",null,[Es,Is,Cs,(0,e._)("a",Ss,[Ps,(0,e.Wm)(a)]),Hs]),Ls,(0,e._)("p",null,[Ts,(0,e._)("a",Ws,[Bs,(0,e.Wm)(a)]),Ns]),Fs,(0,e._)("p",null,[Ms,As,Ds,Os,Gs,(0,e._)("a",zs,[Js,(0,e.Wm)(a)]),Qs]),$s,(0,e._)("p",null,[Ks,(0,e._)("a",Xs,[Ys,(0,e.Wm)(a)]),Vs]),Zs,(0,e._)("p",null,[(0,e._)("a",na,[sa,(0,e.Wm)(a)])]),(0,e._)("p",null,[aa,ea,pa,ta,ra,oa,la,(0,e._)("a",ca,[ua,(0,e.Wm)(a)]),ia,ba,da]),ma,(0,e._)("p",null,[(0,e._)("a",ka,[ga,(0,e.Wm)(a)])]),va,(0,e._)("p",null,[xa,(0,e._)("a",ha,[fa,(0,e.Wm)(a)]),wa,(0,e._)("a",_a,[qa,(0,e.Wm)(a)])])],64)}}}}]);